<Type> Div_t := type {
	<CInt> quot;
	<CInt> rem;
};
Div_t.Layout = cStdlib.Layout;
<Type> LDiv_t = type {
	<CLongInt> quot;
	<CLongInt> rem;
};
LDiv_t.Layout = cStdlib.Layout;
<Type> LLDiv_t := type {
	<CLongLongInt> quot;
	<CLongLongInt> rem;
};
LLDiv_t.Layout = cStdlib.Layout;
CSigval := CInt | Pointer<Void>;
<Type> RandomData := type {
	<Int32> *fptr;
	<Int32> *rptr;
	<Int32> *state;
	<CInt> rand_type;
	<CInt> rand_deg;
	<CInt> rand_sep;
	<Int32> *end_ptr;
};
RandomData.Layout = cStdlib.Layout;
<Type> Drand48Data := type {
	Array<CUnsignedShort> __x(3);
	Array<CUnsignedShort> __old_x(3);
	<CUnsignedShort> __c;
	<CUnsignedShort> __init;
	<CUnsignedLongLong> __a;
};
Drand48Data.Layout = cStdlib.Layout;
