extern <Pointer<Const<Char>> -> CInt> remove;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> CInt> rename;
extern <CInt * Pointer<Const<Char>> * CInt * Pointer<Const<Char>> -> CInt> renameat;
FILEPointer := type_abstraction(Pointer<Void>)
extern <Void -> FILEPointer> tmpfile;
extern <Pointer<Char> -> Pointer<Char>> tmpnam;
extern <Pointer<Char> -> Pointer<Char>> tmpnam_r;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> Pointer<Char>> tempnam;
extern <FILEPointer -> CInt> fclose;
extern <FILEPointer -> CInt> fflush;
extern <FILEPointer -> CInt> fflush_unlocked;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> FILEPointer> fopen;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> * FILEPointer -> FILEPointer> freopen;
extern <CInt * Pointer<Const<Char>> -> FILEPointer> fdopen;
extern <Pointer<Void> * CInt * Pointer<Const<Char>> -> FILEPointer> fmemopen;
extern <Pointer<Pointer<Char>> * Pointer<CInt> -> FILEPointer> open_memstream;
extern <FILEPointer * Pointer<Char> -> Void> setbuf;
extern <FILEPointer * Pointer<Char> * CInt * CInt -> CInt> setvbuf;
extern <FILEPointer * Pointer<Char> * CInt -> Void> setbuffer;
extern <FILEPointer -> Void> setlinebuf;
extern <FILEPointer * Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> fprintf;
extern <Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> printf;
extern <Pointer<Char> * Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> sprintf;
extern <CInt * Pointer<Const<Char>> * CInt -> CInt> vdprintf;
extern <CInt * Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> dprintf;
extern <FILEPointer * Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> fscanf;
extern <Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> scanf;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> * UInt * Pointer<Void>^ -> CInt> sscanf;
extern <FILEPointer -> CInt> fgetc;
extern <FILEPointer -> CInt> getc;
extern <Void -> CInt> getchar;
extern <FILEPointer -> CInt> getc_unlocked;
extern <Void -> CInt> getchar_unlocked;
extern <FILEPointer -> CInt> fgetc_unlocked;
extern <CInt * FILEPointer -> CInt> fputc;
extern <CInt * FILEPointer -> CInt> putc;
extern <CInt -> CInt> putchar;
extern <CInt * FILEPointer -> CInt> fputc_unlocked;
extern <CInt * FILEPointer -> CInt> putc_unlocked;
extern <CInt -> CInt> putchar_unlocked;
extern <FILEPointer -> CInt> getw;
extern <CInt * FILEPointer -> CInt> putw;
extern <Pointer<Char> * CInt * FILEPointer -> Pointer<Char>> fgets;
extern <Pointer<Pointer<Char>> * Pointer<CInt> * CInt * FILEPointer -> CUnsignedInt> __getdelim;
extern <Pointer<Pointer<Char>> * Pointer<CInt> * CInt * FILEPointer -> CUnsignedInt> getdelim;
extern <Pointer<Pointer<Char>> * Pointer<CInt> * FILEPointer -> CUnsignedInt> getline;
extern <Pointer<Const<Char>> * FILEPointer -> CInt> fputs;
extern <Pointer<Const<Char>> -> CInt> puts;
extern <CInt * FILEPointer -> CInt> ungetc;
extern <Pointer<Void> * CInt * CInt * FILEPointer -> CInt> fread;
extern <Pointer<Const<Void>> * CInt * CInt * FILEPointer -> CInt> fwrite;
extern <Pointer<Void> * CInt * CInt * FILEPointer -> CInt> fread_unlocked;
extern <Pointer<Const<Void>> * CInt * CInt * FILEPointer -> CInt> fwrite_unlocked;
extern <FILEPointer * CLong * CInt -> CInt> fseek;
extern <FILEPointer -> CLong> ftell;
extern <FILEPointer -> Void> rewind;
extern <FILEPointer * CInt * CInt -> CInt> fseeko;
extern <FILEPointer -> CInt> ftello;
fpos_tPointer := type_abstraction(Pointer<Void>)
extern <FILEPointer * fpos_tPointer -> CInt> fgetpos;
Constfpos_tPointer := type_abstraction(Pointer<Const<Void>>)
extern <FILEPointer * Constfpos_tPointer -> CInt> fsetpos;
extern <FILEPointer -> Void> clearerr;
extern <FILEPointer -> CInt> feof;
extern <FILEPointer -> CInt> ferror;
extern <FILEPointer -> Void> clearerr_unlocked;
extern <FILEPointer -> CInt> feof_unlocked;
extern <FILEPointer -> CInt> ferror_unlocked;
extern <Pointer<Const<Char>> -> Void> perror;
extern <FILEPointer -> CInt> fileno;
extern <FILEPointer -> CInt> fileno_unlocked;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> FILEPointer> popen;
extern <FILEPointer -> CInt> pclose;
extern <Pointer<Char> -> Pointer<Char>> ctermid;
extern <FILEPointer -> Void> flockfile;
extern <FILEPointer -> CInt> ftrylockfile;
extern <FILEPointer -> Void> funlockfile;
extern <Void -> CInt> __ctype_get_mb_cur_max;
extern <Pointer<Const<Char>> -> Float64> atof;
extern <Pointer<Const<Char>> -> CInt> atoi;
extern <Pointer<Const<Char>> -> CLong> atol;
extern <Pointer<Const<Char>> -> CLongLong> atoll;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> -> Float64> strtod;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> -> Float32> strtof;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> -> CLongDouble> strtold;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> * CInt -> CLong> strtol;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> * CInt -> CUnsignedLong> strtoul;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> * CInt -> CLongLong> strtoq;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> * CInt -> CUnsignedLongLong> strtouq;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> * CInt -> CLongLong> strtoll;
extern <Pointer<Const<Char>> * Pointer<Pointer<Char>> * CInt -> CUnsignedLongLong> strtoull;
extern <CLong -> Pointer<Char>> l64a;
extern <Pointer<Const<Char>> -> CLong> a64l;
extern <Void -> CLong> random;
extern <CUnsignedInt -> Void> srandom;
extern <CUnsignedInt * Pointer<Char> * CInt -> Pointer<Char>> initstate;
extern <Pointer<Char> -> Pointer<Char>> setstate;
extern <Pointer<RandomData> * Pointer<Int32> -> CInt> random_r;
extern <CUnsignedInt * Pointer<RandomData> -> CInt> srandom_r;
extern <CUnsignedInt * Pointer<Char> * CInt * Pointer<RandomData> -> CInt> initstate_r;
extern <Pointer<Char> * Pointer<RandomData> -> CInt> setstate_r;
extern <Void -> CInt> rand;
extern <CUnsignedInt -> Void> srand;
extern <Pointer<CUnsignedInt> -> CInt> rand_r;
extern <Void -> Float64> drand48;
extern <Array<CUnsignedShort> -> Float64> erand48;
extern <Void -> CLong> lrand48;
extern <Array<CUnsignedShort> -> CLong> nrand48;
extern <Void -> CLong> mrand48;
extern <Array<CUnsignedShort> -> CLong> jrand48;
extern <CLong -> Void> srand48;
extern <Array<CUnsignedShort> -> Pointer<CUnsignedShort>> seed48;
extern <Array<CUnsignedShort> -> Void> lcong48;
extern <Pointer<Drand48Data> * Pointer<Float64> -> CInt> drand48_r;
extern <Array<CUnsignedShort> * Pointer<Drand48Data> * Pointer<Float64> -> CInt> erand48_r;
extern <Pointer<Drand48Data> * Pointer<CLong> -> CInt> lrand48_r;
extern <Array<CUnsignedShort> * Pointer<Drand48Data> * Pointer<CLong> -> CInt> nrand48_r;
extern <Pointer<Drand48Data> * Pointer<CLong> -> CInt> mrand48_r;
extern <Array<CUnsignedShort> * Pointer<Drand48Data> * Pointer<CLong> -> CInt> jrand48_r;
extern <CLong * Pointer<Drand48Data> -> CInt> srand48_r;
extern <Array<CUnsignedShort> * Pointer<Drand48Data> -> CInt> seed48_r;
extern <Array<CUnsignedShort> * Pointer<Drand48Data> -> CInt> lcong48_r;
extern <Pointer<Void> -> Void> free;
extern <Pointer<Void> -> Void> cfree;
extern <CInt -> Pointer<Void>> valloc;
extern <Pointer<Pointer<Void>> * CInt * CInt -> CInt> posix_memalign;
extern <CInt * CInt -> Pointer<Void>> aligned_alloc;
extern <Void -> Void> abort;
extern <<Void -> Void> -> CInt> atexit;
extern <<Void -> Void> -> CInt> at_quick_exit;
extern <<Int32 * Pointer<Void> -> Void> * Pointer<Void> -> CInt> on_exit;
extern <CInt -> Void> exit;
extern <CInt -> Void> quick_exit;
extern <CInt -> Void> _Exit;
extern <Pointer<Const<Char>> -> Pointer<Char>> getenv;
extern <Pointer<Char> -> CInt> putenv;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> * CInt -> CInt> setenv;
extern <Pointer<Const<Char>> -> CInt> unsetenv;
extern <Void -> CInt> clearenv;
extern <Pointer<Char> -> Pointer<Char>> mktemp;
extern <Pointer<Char> -> CInt> mkstemp;
extern <Pointer<Char> * CInt -> CInt> mkstemps;
extern <Pointer<Char> -> Pointer<Char>> mkdtemp;
extern <Pointer<Const<Char>> -> CInt> system;
extern <Pointer<Const<Char>> * Pointer<Char> -> Pointer<Char>> realpath;
extern <Pointer<Const<Void>> * Pointer<Const<Void>> * CInt * CInt * <Pointer<Const<Void>> * Pointer<Const<Void>> -> Int32> -> Pointer<Void>> bsearch;
extern <Pointer<Void> * CInt * CInt * <Pointer<Const<Void>> * Pointer<Const<Void>> -> Int32> -> Void> qsort;
extern <CInt -> CInt> abs;
extern <CLong -> CLong> labs;
extern <CLongLong -> CLongLong> llabs;
extern <CInt * CInt -> Div_t> div;
extern <CLong * CLong -> LDiv_t> ldiv;
extern <CLongLong * CLongLong -> LLDiv_t> lldiv;
extern <Float64 * CInt * Pointer<CInt> * Pointer<CInt> -> Pointer<Char>> ecvt;
extern <Float64 * CInt * Pointer<CInt> * Pointer<CInt> -> Pointer<Char>> fcvt;
extern <Float64 * CInt * Pointer<Char> -> Pointer<Char>> gcvt;
extern <CLongDouble * CInt * Pointer<CInt> * Pointer<CInt> -> Pointer<Char>> qecvt;
extern <CLongDouble * CInt * Pointer<CInt> * Pointer<CInt> -> Pointer<Char>> qfcvt;
extern <CLongDouble * CInt * Pointer<Char> -> Pointer<Char>> qgcvt;
extern <Float64 * CInt * Pointer<CInt> * Pointer<CInt> * Pointer<Char> * CInt -> CInt> ecvt_r;
extern <Float64 * CInt * Pointer<CInt> * Pointer<CInt> * Pointer<Char> * CInt -> CInt> fcvt_r;
extern <CLongDouble * CInt * Pointer<CInt> * Pointer<CInt> * Pointer<Char> * CInt -> CInt> qecvt_r;
extern <CLongDouble * CInt * Pointer<CInt> * Pointer<CInt> * Pointer<Char> * CInt -> CInt> qfcvt_r;
extern <Pointer<Const<Char>> * CInt -> CInt> mblen;
extern <Pointer<CInt> * Pointer<Const<Char>> * CInt -> CInt> mbtowc;
extern <Pointer<Char> * CInt -> CInt> wctomb;
extern <Pointer<CInt> * Pointer<Const<Char>> * CInt -> CInt> mbstowcs;
extern <Pointer<Char> * Pointer<Const<CInt>> * CInt -> CInt> wcstombs;
extern <Pointer<Const<Char>> -> CInt> rpmatch;
extern <Pointer<Pointer<Char>> * Pointer<Const<Pointer<Char>>> * Pointer<Pointer<Char>> -> CInt> getsubopt;
extern <Array<Float64> * CInt -> CInt> getloadavg;
extern <Pointer<Void> * Pointer<Const<Void>> * CInt * CInt -> Pointer<Void>> memccpy;
extern <Pointer<Char> * Pointer<Const<Char>> -> Pointer<Char>> strcpy;
extern <Pointer<Char> * Pointer<Const<Char>> -> Pointer<Char>> strcat;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> CInt> strcmp;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> CInt> strcoll;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> * Pointer<Void> -> CInt> strcoll_l;
extern <Pointer<Char> * Pointer<Const<Char>> * CInt * Pointer<Void> -> CInt> strxfrm_l;
extern <Pointer<Const<Char>> -> Pointer<Char>> strdup;
extern <Pointer<Const<Char>> * CInt -> Pointer<Char>> strchr;
extern <Pointer<Const<Char>> * CInt -> Pointer<Char>> strrchr;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> Pointer<Char>> strpbrk;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> Pointer<Char>> strstr;
extern <Pointer<Char> * Pointer<Const<Char>> -> Pointer<Char>> strtok;
extern <Pointer<Char> * Pointer<Const<Char>> * Pointer<Pointer<Char>> -> Pointer<Char>> __strtok_r;
extern <Pointer<Char> * Pointer<Const<Char>> * Pointer<Pointer<Char>> -> Pointer<Char>> strtok_r;
extern <Pointer<Const<Char>> * CInt -> CInt> strnlen;
extern <CInt -> Pointer<Char>> strerror;
extern <CInt * Pointer<Void> -> Pointer<Char>> strerror_l;
extern <Pointer<Void> * CInt -> Void> __bzero;
extern <Pointer<Const<Void>> * Pointer<Void> * CInt -> Void> bcopy;
extern <Pointer<Const<Void>> * Pointer<Const<Void>> * CInt -> CInt> bcmp;
extern <Pointer<Const<Char>> * CInt -> Pointer<Char>> index;
extern <Pointer<Const<Char>> * CInt -> Pointer<Char>> rindex;
extern <CInt -> CInt> ffs;
extern <Pointer<Const<Char>> * Pointer<Const<Char>> -> CInt> strcasecmp;
extern <Pointer<Pointer<Char>> * Pointer<Const<Char>> -> Pointer<Char>> strsep;
extern <CInt -> Pointer<Char>> strsignal;
extern <Pointer<Char> * Pointer<Const<Char>> -> Pointer<Char>> __stpcpy;
extern <Pointer<Char> * Pointer<Const<Char>> -> Pointer<Char>> stpcpy;
extern <Pointer<Char> * Pointer<Const<Char>> * CInt -> Pointer<Char>> __stpncpy;
extern <CInt * <Int32 -> Void> -> <Int32 -> Void>> __sysv_signal;
extern <CInt * <Int32 -> Void> -> <Int32 -> Void>> signal;
extern <CInt * CInt -> CInt> kill;
extern <CInt * CInt -> CInt> killpg;
extern <CInt -> CInt> raise;
extern <CInt * <Int32 -> Void> -> <Int32 -> Void>> ssignal;
extern <CInt -> CInt> gsignal;
extern <CInt * Pointer<Const<Char>> -> Void> psignal;
Constsiginfo_tPointer := type_abstraction(Pointer<Const<Void>>)
extern <Constsiginfo_tPointer * Pointer<Const<Char>> -> Void> psiginfo;
extern <CInt -> CInt> sigblock;
extern <CInt -> CInt> sigsetmask;
extern <Void -> CInt> siggetmask;
sigset_tPointer := type_abstraction(Pointer<Void>)
extern <sigset_tPointer -> CInt> sigemptyset;
extern <sigset_tPointer -> CInt> sigfillset;
extern <sigset_tPointer * CInt -> CInt> sigaddset;
extern <sigset_tPointer * CInt -> CInt> sigdelset;
Constsigset_tPointer := type_abstraction(Pointer<Const<Void>>)
extern <Constsigset_tPointer * CInt -> CInt> sigismember;
extern <CInt * Constsigset_tPointer * sigset_tPointer -> CInt> sigprocmask;
extern <Constsigset_tPointer -> CInt> sigsuspend;
ConstsigactionPointer := type_abstraction(Pointer<Const<Void>>)
sigactionPointer := type_abstraction(Pointer<Void>)
extern <CInt * ConstsigactionPointer * sigactionPointer -> CInt> sigaction;
extern <sigset_tPointer -> CInt> sigpending;
extern <Constsigset_tPointer * Pointer<CInt> -> CInt> sigwait;
siginfo_tPointer := type_abstraction(Pointer<Void>)
extern <Constsigset_tPointer * siginfo_tPointer -> CInt> sigwaitinfo;
ConsttimespecPointer := type_abstraction(Pointer<Const<Void>>)
extern <Constsigset_tPointer * siginfo_tPointer * ConsttimespecPointer -> CInt> sigtimedwait;
extern <CInt * CInt * Const<CSigval> -> CInt> sigqueue;
sigcontextPointer := type_abstraction(Pointer<Void>)
extern <sigcontextPointer -> CInt> sigreturn;
extern <CInt * CInt -> CInt> siginterrupt;
sigstackPointer := type_abstraction(Pointer<Void>)
extern <sigstackPointer * sigstackPointer -> CInt> sigstack;
ConstsigaltstackPointer := type_abstraction(Pointer<Const<Void>>)
sigaltstackPointer := type_abstraction(Pointer<Void>)
extern <ConstsigaltstackPointer * sigaltstackPointer -> CInt> sigaltstack;
extern <Void -> CInt> __libc_current_sigrtmin;
extern <Void -> CInt> __libc_current_sigrtmax;
extern <Void -> Int64> clock;
extern <Pointer<Int64> -> Int64> time;
extern <Int64 * Int64 -> Float64> difftime;
tmPointer := type_abstraction(Pointer<Void>)
extern <tmPointer -> Int64> mktime;
ConsttmPointer := type_abstraction(Pointer<Const<Void>>)
extern <Pointer<Char> * CInt * Pointer<Const<Char>> * ConsttmPointer -> CInt> strftime;
extern <Pointer<Char> * CInt * Pointer<Const<Char>> * ConsttmPointer * Pointer<Void> -> CInt> strftime_l;
extern <Pointer<Const<Int64>> -> tmPointer> gmtime;
extern <Pointer<Const<Int64>> -> tmPointer> localtime;
extern <Pointer<Const<Int64>> * tmPointer -> tmPointer> gmtime_r;
extern <Pointer<Const<Int64>> * tmPointer -> tmPointer> localtime_r;
extern <ConsttmPointer -> Pointer<Char>> asctime;
extern <Pointer<Const<Int64>> -> Pointer<Char>> ctime;
extern <ConsttmPointer * Pointer<Char> -> Pointer<Char>> asctime_r;
extern <Pointer<Const<Int64>> * Pointer<Char> -> Pointer<Char>> ctime_r;
extern <Void -> Void> tzset;
extern <Pointer<Const<Int64>> -> CInt> stime;
extern <tmPointer -> Int64> timegm;
extern <tmPointer -> Int64> timelocal;
extern <CInt -> CInt> dysize;
timespecPointer := type_abstraction(Pointer<Void>)
extern <ConsttimespecPointer * timespecPointer -> CInt> nanosleep;
extern <CInt * timespecPointer -> CInt> clock_getres;
extern <CInt * timespecPointer -> CInt> clock_gettime;
extern <CInt * ConsttimespecPointer -> CInt> clock_settime;
extern <CInt * CInt * ConsttimespecPointer * timespecPointer -> CInt> clock_nanosleep;
extern <CInt * Pointer<CInt> -> CInt> clock_getcpuclockid;
sigeventPointer := type_abstraction(Pointer<Void>)
extern <CInt * sigeventPointer * Pointer<CInt> -> CInt> timer_create;
extern <CInt -> CInt> timer_delete;
ConstitimerspecPointer := type_abstraction(Pointer<Const<Void>>)
itimerspecPointer := type_abstraction(Pointer<Void>)
extern <CInt * CInt * ConstitimerspecPointer * itimerspecPointer -> CInt> timer_settime;
extern <CInt * itimerspecPointer -> CInt> timer_gettime;
extern <CInt -> CInt> timer_getoverrun;
extern <timespecPointer * CInt -> CInt> timespec_get;
