/************ This file was generated by parlex ************/

#include "parlex/builtins/precedence_grammar.hpp"

parlex::grammar const & get_precedence() {
	static parlex::grammar g("SYNTAX");

	static parlex::builtins::string_terminal & literal0 = g.add_literal(U"#");
	static parlex::builtins::string_terminal & literal1 = g.add_literal(U":");
	static parlex::builtins::string_terminal & literal2 = g.add_literal(U"_");
	static parlex::builtins::string_terminal & literal3 = g.add_literal(U"\n");

	static parlex::state_machine & COMMENT = g.add_production("COMMENT", 0, 1);
	static parlex::state_machine & ENTRY = g.add_production("ENTRY", 0, 1);
	static parlex::state_machine & IDENTIFIER = g.add_production("IDENTIFIER", 0, 1, parlex::builtins::greedy);
	static parlex::state_machine & NEWLINE = g.add_production("NEWLINE", 0, 1);
	static parlex::state_machine & SYNTAX = g.add_production("SYNTAX", 0, 1);

	static bool initialized = false;
	if (!initialized) {
		initialized = true;

		COMMENT.add_transition(0, literal0, 1);
		COMMENT.add_transition(1, parlex::builtins::not_newline, 1);
		COMMENT.add_transition(1, NEWLINE, 2);

		ENTRY.add_transition(0, IDENTIFIER, 3);
		ENTRY.add_transition(1, NEWLINE, 4);
		ENTRY.add_transition(2, IDENTIFIER, 1);
		ENTRY.add_transition(3, literal1, 2);

		IDENTIFIER.add_transition(0, parlex::builtins::letter, 1);
		IDENTIFIER.add_transition(0, literal2, 1);
		IDENTIFIER.add_transition(1, parlex::builtins::letter, 1);
		IDENTIFIER.add_transition(1, parlex::builtins::number, 1);
		IDENTIFIER.add_transition(1, literal2, 1);

		NEWLINE.add_transition(0, literal3, 1);

		SYNTAX.add_transition(0, ENTRY, 0);
		SYNTAX.add_transition(0, COMMENT, 0);
	}

	return g;
}

