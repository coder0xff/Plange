include(curl_and_unpack)

function(prep_dependency DL_URL EXTENSION DEP_NAME CONFIG_CMAKE_RELATIVE_PATH CONFIG_FLAGS INCLUDE_OUT)
	set(DOWNLOADS_DIR "${PROJECT_BINARY_DIR}/Downloads")

	compute_curl("${DL_URL}" "${DEP_NAME}" "${EXTENSION}" UNPACK_DIR DL_FILENAME)

	set(DEP_INSTALL_DIR "${PROJECT_BINARY_DIR}/${DEP_NAME}")
	set(DEP_CONFIG_FILE "${DEP_INSTALL_DIR}/${CONFIG_CMAKE_RELATIVE_PATH}")
	if (NOT EXISTS "${DEP_CONFIG_FILE}")
		message(STATUS "${DEP_NAME} not installed. Preparing dependency...")
		set(DEP_BINARY_DIR "${UNPACK_DIR}/build")
		if (NOT EXISTS "${DEP_BINARY_DIR}/${DEP_NAME}.sln")
			curl_and_unpack("${DL_URL}" "${DEP_NAME}" "${EXTENSION}")
			file(MAKE_DIRECTORY "${DEP_BINARY_DIR}")
			message(STATUS "Configuring ${DEP_NAME}")
			execute_process(COMMAND "${CMAKE_COMMAND}" "${UNPACK_DIR}" "-G" "${CMAKE_GENERATOR}" "-DCMAKE_INSTALL_PREFIX=${DEP_INSTALL_DIR}" "${CONFIG_FLAGS}" WORKING_DIRECTORY "${DEP_BINARY_DIR}")
		endif()
		message(STATUS "Building ${DEP_NAME}")
		execute_process(COMMAND "${CMAKE_COMMAND}" "--build" "${DEP_BINARY_DIR}")
		message(STATUS "Installing ${DEP_NAME} to ${DEP_INSTALL_DIR}")
		file(MAKE_DIRECTORY "${DEP_INSTALL_DIR}")
		execute_process(COMMAND "${CMAKE_COMMAND}" "--build" "${DEP_BINARY_DIR}" "--target" "install")
	else()
		message(STATUS "Found ${DEP_NAME} in ${DEP_INSTALL_DIR}")
	endif()
	set(${INCLUDE_OUT} "${DEP_CONFIG_FILE}" PARENT_SCOPE)
endfunction()

macro(depend DEP_NAME DL_URL EXTENSION CONFIG_CMAKE_RELATIVE_PATH CONFIG_FLAGS)
	message(STATUS "Searching for ${DEP_NAME}")
	find_package(${DEP_NAME} CONFIG QUIET)
	if (NOT ${${DEP_NAME}_FOUND})	
		prep_dependency("${DL_URL}" "${EXTENSION}" "${DEP_NAME}" "${CONFIG_CMAKE_RELATIVE_PATH}" "${CONFIG_FLAGS}" INCLUDE_OUT)
		find_package(${DEP_NAME} CONFIG QUIET)
		if (NOT ${${DEP_NAME}_FOUND})	
			include(${INCLUDE_OUT} OPTIONAL)
		endif()
	else()
		message(STATUS "Found ${DEP_NAME}")
	endif()
endmacro()

