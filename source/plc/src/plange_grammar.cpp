/************ This file was generated by parlex ************/

#include "plange_grammar.hpp"

namespace plc {

DEFINE_TERMINAL(literal0, U"\n");
DEFINE_TERMINAL(literal1, U" PTR");
DEFINE_TERMINAL(literal2, U"!");
DEFINE_TERMINAL(literal3, U"\"");
DEFINE_TERMINAL(literal4, U"\"\"\"");
DEFINE_TERMINAL(literal5, U"#");
DEFINE_TERMINAL(literal6, U"%");
DEFINE_TERMINAL(literal7, U"&");
DEFINE_TERMINAL(literal8, U"&&");
DEFINE_TERMINAL(literal9, U"\'|");
DEFINE_TERMINAL(literal10, U"(");
DEFINE_TERMINAL(literal11, U"(|");
DEFINE_TERMINAL(literal12, U")");
DEFINE_TERMINAL(literal13, U"*");
DEFINE_TERMINAL(literal14, U"***/");
DEFINE_TERMINAL(literal15, U"*/");
DEFINE_TERMINAL(literal16, U"+");
DEFINE_TERMINAL(literal17, U"++");
DEFINE_TERMINAL(literal18, U"+-");
DEFINE_TERMINAL(literal19, U",");
DEFINE_TERMINAL(literal20, U", ");
DEFINE_TERMINAL(literal21, U"-");
DEFINE_TERMINAL(literal22, U"--");
DEFINE_TERMINAL(literal23, U"->");
DEFINE_TERMINAL(literal24, U".");
DEFINE_TERMINAL(literal25, U"...");
DEFINE_TERMINAL(literal26, U"/");
DEFINE_TERMINAL(literal27, U"/*");
DEFINE_TERMINAL(literal28, U"/***");
DEFINE_TERMINAL(literal29, U"//");
DEFINE_TERMINAL(literal30, U"/=");
DEFINE_TERMINAL(literal31, U"/has");
DEFINE_TERMINAL(literal32, U"/in");
DEFINE_TERMINAL(literal33, U"0");
DEFINE_TERMINAL(literal34, U"0x");
DEFINE_TERMINAL(literal35, U"1");
DEFINE_TERMINAL(literal36, U"2");
DEFINE_TERMINAL(literal37, U"3");
DEFINE_TERMINAL(literal38, U"4");
DEFINE_TERMINAL(literal39, U"5");
DEFINE_TERMINAL(literal40, U"6");
DEFINE_TERMINAL(literal41, U"7");
DEFINE_TERMINAL(literal42, U"8");
DEFINE_TERMINAL(literal43, U"9");
DEFINE_TERMINAL(literal44, U":");
DEFINE_TERMINAL(literal45, U":=");
DEFINE_TERMINAL(literal46, U";");
DEFINE_TERMINAL(literal47, U"<");
DEFINE_TERMINAL(literal48, U"<-");
DEFINE_TERMINAL(literal49, U"<->");
DEFINE_TERMINAL(literal50, U"<<");
DEFINE_TERMINAL(literal51, U"<=>");
DEFINE_TERMINAL(literal52, U"=");
DEFINE_TERMINAL(literal53, U"=<");
DEFINE_TERMINAL(literal54, U"=>");
DEFINE_TERMINAL(literal55, U">");
DEFINE_TERMINAL(literal56, U">>");
DEFINE_TERMINAL(literal57, U"\?");
DEFINE_TERMINAL(literal58, U"\?\?");
DEFINE_TERMINAL(literal59, U"@");
DEFINE_TERMINAL(literal60, U"BYTE");
DEFINE_TERMINAL(literal61, U"DWORD");
DEFINE_TERMINAL(literal62, U"QWORD");
DEFINE_TERMINAL(literal63, U"R");
DEFINE_TERMINAL(literal64, U"T");
DEFINE_TERMINAL(literal65, U"WORD");
DEFINE_TERMINAL(literal66, U"X86_fast_call");
DEFINE_TERMINAL(literal67, U"Z");
DEFINE_TERMINAL(literal68, U"[");
DEFINE_TERMINAL(literal69, U"[|");
DEFINE_TERMINAL(literal70, U"\\");
DEFINE_TERMINAL(literal71, U"]");
DEFINE_TERMINAL(literal72, U"^");
DEFINE_TERMINAL(literal73, U"^^");
DEFINE_TERMINAL(literal74, U"_");
DEFINE_TERMINAL(literal75, U"_delta_");
DEFINE_TERMINAL(literal76, U"_dot_");
DEFINE_TERMINAL(literal77, U"_o_");
DEFINE_TERMINAL(literal78, U"_swiz_");
DEFINE_TERMINAL(literal79, U"_x_");
DEFINE_TERMINAL(literal80, U"_|");
DEFINE_TERMINAL(literal81, U"`");
DEFINE_TERMINAL(literal82, U"```");
DEFINE_TERMINAL(literal83, U"all");
DEFINE_TERMINAL(literal84, U"alloc");
DEFINE_TERMINAL(literal85, U"and");
DEFINE_TERMINAL(literal86, U"any_reg_call");
DEFINE_TERMINAL(literal87, U"arm_aapcs_call");
DEFINE_TERMINAL(literal88, U"arm_aapcs_vfp_call");
DEFINE_TERMINAL(literal89, U"arm_apcs_call");
DEFINE_TERMINAL(literal90, U"asm");
DEFINE_TERMINAL(literal91, U"atomic");
DEFINE_TERMINAL(literal92, U"avr_builtin_call");
DEFINE_TERMINAL(literal93, U"avr_intr_call");
DEFINE_TERMINAL(literal94, U"avr_signal_call");
DEFINE_TERMINAL(literal95, U"break");
DEFINE_TERMINAL(literal96, U"c_call");
DEFINE_TERMINAL(literal97, U"casts");
DEFINE_TERMINAL(literal98, U"catch");
DEFINE_TERMINAL(literal99, U"cold_call");
DEFINE_TERMINAL(literal100, U"context");
DEFINE_TERMINAL(literal101, U"continue");
DEFINE_TERMINAL(literal102, U"cxx_fast_tls_call");
DEFINE_TERMINAL(literal103, U"diamond");
DEFINE_TERMINAL(literal104, U"do");
DEFINE_TERMINAL(literal105, U"downcasts");
DEFINE_TERMINAL(literal106, U"elif");
DEFINE_TERMINAL(literal107, U"else");
DEFINE_TERMINAL(literal108, U"enum");
DEFINE_TERMINAL(literal109, U"exactly");
DEFINE_TERMINAL(literal110, U"exists");
DEFINE_TERMINAL(literal111, U"exists!");
DEFINE_TERMINAL(literal112, U"extern");
DEFINE_TERMINAL(literal113, U"false");
DEFINE_TERMINAL(literal114, U"fast_call");
DEFINE_TERMINAL(literal115, U"finally");
DEFINE_TERMINAL(literal116, U"first_target_call");
DEFINE_TERMINAL(literal117, U"for");
DEFINE_TERMINAL(literal118, U"free");
DEFINE_TERMINAL(literal119, U"ghc_call");
DEFINE_TERMINAL(literal120, U"has");
DEFINE_TERMINAL(literal121, U"hhvm_call");
DEFINE_TERMINAL(literal122, U"hipe_call");
DEFINE_TERMINAL(literal123, U"if");
DEFINE_TERMINAL(literal124, U"imperative");
DEFINE_TERMINAL(literal125, U"implementing");
DEFINE_TERMINAL(literal126, U"implements");
DEFINE_TERMINAL(literal127, U"import");
DEFINE_TERMINAL(literal128, U"in");
DEFINE_TERMINAL(literal129, U"inheriting");
DEFINE_TERMINAL(literal130, U"inherits");
DEFINE_TERMINAL(literal131, U"intel_ocl_bi_call");
DEFINE_TERMINAL(literal132, U"internal");
DEFINE_TERMINAL(literal133, U"is");
DEFINE_TERMINAL(literal134, U"lock");
DEFINE_TERMINAL(literal135, U"msp430_intr_call");
DEFINE_TERMINAL(literal136, U"null");
DEFINE_TERMINAL(literal137, U"object");
DEFINE_TERMINAL(literal138, U"opaque");
DEFINE_TERMINAL(literal139, U"or");
DEFINE_TERMINAL(literal140, U"preserve_all_call");
DEFINE_TERMINAL(literal141, U"preserve_most_call");
DEFINE_TERMINAL(literal142, U"private");
DEFINE_TERMINAL(literal143, U"protected");
DEFINE_TERMINAL(literal144, U"protected internal");
DEFINE_TERMINAL(literal145, U"psubs");
DEFINE_TERMINAL(literal146, U"psups");
DEFINE_TERMINAL(literal147, U"ptx_device_call");
DEFINE_TERMINAL(literal148, U"ptx_kernel_call");
DEFINE_TERMINAL(literal149, U"public");
DEFINE_TERMINAL(literal150, U"pure");
DEFINE_TERMINAL(literal151, U"read_lock");
DEFINE_TERMINAL(literal152, U"record");
DEFINE_TERMINAL(literal153, U"return");
DEFINE_TERMINAL(literal154, U"spir_func_call");
DEFINE_TERMINAL(literal155, U"spir_kernel_call");
DEFINE_TERMINAL(literal156, U"stable");
DEFINE_TERMINAL(literal157, U"static");
DEFINE_TERMINAL(literal158, U"subs");
DEFINE_TERMINAL(literal159, U"sups");
DEFINE_TERMINAL(literal160, U"swift_call");
DEFINE_TERMINAL(literal161, U"this");
DEFINE_TERMINAL(literal162, U"this_func");
DEFINE_TERMINAL(literal163, U"this_type");
DEFINE_TERMINAL(literal164, U"throw");
DEFINE_TERMINAL(literal165, U"throwing");
DEFINE_TERMINAL(literal166, U"true");
DEFINE_TERMINAL(literal167, U"try");
DEFINE_TERMINAL(literal168, U"type");
DEFINE_TERMINAL(literal169, U"unstable");
DEFINE_TERMINAL(literal170, U"until");
DEFINE_TERMINAL(literal171, U"upcasts");
DEFINE_TERMINAL(literal172, U"using");
DEFINE_TERMINAL(literal173, U"volatile");
DEFINE_TERMINAL(literal174, U"webkit_js_call");
DEFINE_TERMINAL(literal175, U"while");
DEFINE_TERMINAL(literal176, U"write_lock");
DEFINE_TERMINAL(literal177, U"x86_64_sysv_call");
DEFINE_TERMINAL(literal178, U"x86_64_win64_call");
DEFINE_TERMINAL(literal179, U"x86_intr_call");
DEFINE_TERMINAL(literal180, U"x86_std_call");
DEFINE_TERMINAL(literal181, U"x86_this_call");
DEFINE_TERMINAL(literal182, U"x86_vector_call");
DEFINE_TERMINAL(literal183, U"xor");
DEFINE_TERMINAL(literal184, U"{");
DEFINE_TERMINAL(literal185, U"{|");
DEFINE_TERMINAL(literal186, U"|");
DEFINE_TERMINAL(literal187, U"|\'");
DEFINE_TERMINAL(literal188, U"|)");
DEFINE_TERMINAL(literal189, U"|]");
DEFINE_TERMINAL(literal190, U"|_");
DEFINE_TERMINAL(literal191, U"||");
DEFINE_TERMINAL(literal192, U"|}");
DEFINE_TERMINAL(literal193, U"}");
DEFINE_TERMINAL(literal194, U"~");
DEFINE_TERMINAL(literal195, U"~~");
DEFINE_TERMINAL(literal196, U"¬");
DEFINE_TERMINAL(literal197, U"±");
DEFINE_TERMINAL(literal198, U"×");
DEFINE_TERMINAL(literal199, U"÷");
DEFINE_TERMINAL(literal200, U"Δ");
DEFINE_TERMINAL(literal201, U"ᶜ");
DEFINE_TERMINAL(literal202, U"←");
DEFINE_TERMINAL(literal203, U"↑");
DEFINE_TERMINAL(literal204, U"→");
DEFINE_TERMINAL(literal205, U"↓");
DEFINE_TERMINAL(literal206, U"↔");
DEFINE_TERMINAL(literal207, U"⇒");
DEFINE_TERMINAL(literal208, U"⇔");
DEFINE_TERMINAL(literal209, U"∀");
DEFINE_TERMINAL(literal210, U"∃");
DEFINE_TERMINAL(literal211, U"∃!");
DEFINE_TERMINAL(literal212, U"∈");
DEFINE_TERMINAL(literal213, U"∉");
DEFINE_TERMINAL(literal214, U"∋");
DEFINE_TERMINAL(literal215, U"∌");
DEFINE_TERMINAL(literal216, U"∘");
DEFINE_TERMINAL(literal217, U"√");
DEFINE_TERMINAL(literal218, U"∧");
DEFINE_TERMINAL(literal219, U"∨");
DEFINE_TERMINAL(literal220, U"∩");
DEFINE_TERMINAL(literal221, U"∪");
DEFINE_TERMINAL(literal222, U"≠");
DEFINE_TERMINAL(literal223, U"≤");
DEFINE_TERMINAL(literal224, U"≥");
DEFINE_TERMINAL(literal225, U"⊂");
DEFINE_TERMINAL(literal226, U"⊃");
DEFINE_TERMINAL(literal227, U"⊆");
DEFINE_TERMINAL(literal228, U"⊇");
DEFINE_TERMINAL(literal229, U"⊕");
DEFINE_TERMINAL(literal230, U"⊖");
DEFINE_TERMINAL(literal231, U"⋅");
DEFINE_TERMINAL(literal232, U"⋮");
DEFINE_TERMINAL(literal233, U"⌈");
DEFINE_TERMINAL(literal234, U"⌉");
DEFINE_TERMINAL(literal235, U"⌊");
DEFINE_TERMINAL(literal236, U"⌋");

DEFINE_DFA(ADDITION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal16,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(ADD_SUB,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal197,2);
		DFA_EDGE(literal18,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(ALL,
	DFA_STATE 0:
		DFA_EDGE(literal209,1);
		DFA_EDGE(literal83,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ALLOCATION,
	DFA_STATE 0:
		DFA_EDGE(literal84,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(PARENTHETICAL_INVOCATION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(AND,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal85,2);
		DFA_EDGE(literal218,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(ARGUMENT,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ARGUMENT_PACK,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal25,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ARRAY,
	DFA_STATE 0:
		DFA_EDGE(literal68,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal19,3);
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ARRAY_INDEXER,
	DFA_STATE 0:
		DFA_EDGE(ARGUMENT_PACK,1);
		DFA_EDGE(ARGUMENT,1);
		DFA_EDGE(SLICE,1);
		DFA_EDGE(IC,0);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ARRAY_INVOCATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal68,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(ARRAY_INDEXER,3);
		DFA_EDGE(literal19,2);
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal19,2);
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_EXPRESSION,
	DFA_STATE 0:
		DFA_EDGE(ASM_IDENTIFIER,1);
		DFA_EDGE(ASM_PTR_ARITHMETIC_ATT,1);
		DFA_EDGE(ASM_PTR_ARITHMETIC_INTEL,1);
		DFA_EDGE(NON_FRACTIONAL,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_FUNCTION,
	DFA_STATE 0:
		DFA_EDGE(literal90,3);
		DFA_EDGE(literal10,2);
		DFA_EDGE(FUNCTION_MODIFIER_0,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal90,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(PARAMETER,4);
		DFA_EDGE(literal12,5);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal184,6);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal19,7);
		DFA_EDGE(literal12,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(literal90,3);
		DFA_EDGE(FUNCTION_MODIFIER_0,1);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(ASM_SCOPE,8);
		break;
	DFA_STATE 7:
		DFA_EDGE(PARAMETER,4);
		DFA_EDGE(IC,7);
		break;
	DFA_STATE 8:
		DFA_EDGE(literal193,9);
		break;
	DFA_STATE 9:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_IDENTIFIER,
	DFA_STATE 0:
		DFA_EDGE(literal6,1);
		DFA_EDGE(IDENTIFIER,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_OP,
	DFA_STATE 0:
		DFA_EDGE(parlex::builtins::lowercase_letter,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(parlex::builtins::lowercase_letter,1);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_PTR_ARITHMETIC_ATT,
	DFA_STATE 0:
		DFA_EDGE(ASM_IDENTIFIER,1);
		DFA_EDGE(NON_FRACTIONAL,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal44,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(ASM_PTR_ARITHMETIC_ATT_REG,4);
		break;
	DFA_STATE 3:
		DFA_EDGE(NON_FRACTIONAL,5);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		DFA_EDGE(ASM_PTR_ARITHMETIC_ATT_REG,4);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_PTR_ARITHMETIC_ATT_REG,
	DFA_STATE 0:
		DFA_EDGE(literal10,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(ASM_IDENTIFIER,3);
		DFA_EDGE(literal19,2);
		DFA_EDGE(literal12,7);
		break;
	DFA_STATE 2:
		DFA_EDGE(ASM_IDENTIFIER,4);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal19,2);
		DFA_EDGE(literal12,7);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal19,5);
		DFA_EDGE(literal12,7);
		break;
	DFA_STATE 5:
		DFA_EDGE(NON_NEG_NON_FRACTIONAL,6);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal12,7);
		break;
	DFA_STATE 7:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_PTR_ARITHMETIC_INTEL,
	DFA_STATE 0:
		DFA_EDGE(literal68,1);
		DFA_EDGE(literal61,2);
		DFA_EDGE(literal65,2);
		DFA_EDGE(literal60,2);
		DFA_EDGE(literal62,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(ASM_IDENTIFIER,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal1,4);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal44,6);
		DFA_EDGE(literal71,13);
		DFA_EDGE(literal16,5);
		DFA_EDGE(literal21,7);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal68,1);
		break;
	DFA_STATE 5:
		DFA_EDGE(ASM_IDENTIFIER,8);
		DFA_EDGE(NON_NEG_INTEGER,9);
		break;
	DFA_STATE 6:
		DFA_EDGE(ASM_IDENTIFIER,10);
		break;
	DFA_STATE 7:
		DFA_EDGE(NON_NEG_INTEGER,9);
		break;
	DFA_STATE 8:
		DFA_EDGE(literal71,13);
		DFA_EDGE(literal16,7);
		DFA_EDGE(literal21,7);
		DFA_EDGE(literal13,11);
		break;
	DFA_STATE 9:
		DFA_EDGE(literal71,13);
		break;
	DFA_STATE 10:
		DFA_EDGE(literal71,13);
		DFA_EDGE(literal16,5);
		DFA_EDGE(literal21,7);
		break;
	DFA_STATE 11:
		DFA_EDGE(NON_NEG_NON_FRACTIONAL,12);
		break;
	DFA_STATE 12:
		DFA_EDGE(literal71,13);
		DFA_EDGE(literal16,7);
		DFA_EDGE(literal21,7);
		break;
	DFA_STATE 13:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_SCOPE,
	DFA_STATE 0:
		DFA_ACCEPT;
		DFA_EDGE(ASM_STATEMENT,0);
		DFA_EDGE(IC,0);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASM_STATEMENT,
	DFA_STATE 0:
		DFA_EDGE(ASM_OP,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal0,6);
		DFA_EDGE(ICR,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal0,6);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(ASM_EXPRESSION,4);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal0,6);
		DFA_EDGE(literal19,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(ASM_EXPRESSION,4);
		DFA_EDGE(literal0,6);
		DFA_EDGE(literal19,5);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ASSIGNMENT_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal48,3);
		DFA_EDGE(literal202,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(ASSIGNMENT_CHAIN,4);
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ATTRIBUTE,
	DFA_STATE 0:
		DFA_EDGE(literal59,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal59,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BIJECTION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal49,2);
		DFA_EDGE(literal206,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(BINARY_ARITHMETIC_OP,
	DFA_STATE 0:
		DFA_EDGE(ADDITION,1);
		DFA_EDGE(ADD_SUB,1);
		DFA_EDGE(DIVISION,1);
		DFA_EDGE(EXPONENTIATION,1);
		DFA_EDGE(SUBTRACTION,1);
		DFA_EDGE(SHIFTL,1);
		DFA_EDGE(SHIFTR,1);
		DFA_EDGE(MULTIPLICATIVE_OP,1);
		DFA_EDGE(INTEGER_DIVISION,1);
		DFA_EDGE(MODULATION,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BINARY_COLLECTION_OP,
	DFA_STATE 0:
		DFA_EDGE(BIJECTION,1);
		DFA_EDGE(SYMMETRIC_DIFFERENCE,1);
		DFA_EDGE(UNION,1);
		DFA_EDGE(INTERSECTION,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BINARY_LOGICAL_OP,
	DFA_STATE 0:
		DFA_EDGE(AND,1);
		DFA_EDGE(NOR,1);
		DFA_EDGE(OR,1);
		DFA_EDGE(NAND,1);
		DFA_EDGE(MAPS_TO,1);
		DFA_EDGE(IMPLICATION,1);
		DFA_EDGE(IFF,1);
		DFA_EDGE(XOR,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BINARY_OP,
	DFA_STATE 0:
		DFA_EDGE(BINARY_LOGICAL_OP,1);
		DFA_EDGE(BINARY_ARITHMETIC_OP,1);
		DFA_EDGE(BITWISE_OP,1);
		DFA_EDGE(BINARY_COLLECTION_OP,1);
		DFA_EDGE(CONSTRUCTIVE_OP,1);
		DFA_EDGE(RELATIONAL_OP,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BITWISE_OP,
	DFA_STATE 0:
		DFA_EDGE(BIT_OR,1);
		DFA_EDGE(BIT_AND,1);
		DFA_EDGE(BIT_XOR,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BIT_AND,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal8,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(BIT_NOT,
	DFA_STATE 0:
		DFA_EDGE(literal195,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BIT_OR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal191,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(BIT_XOR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal73,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(BLOCK,
	DFA_STATE 0:
		DFA_EDGE(literal184,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(STATEMENT_SCOPE,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal193,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BOOL,
	DFA_STATE 0:
		DFA_EDGE(literal113,1);
		DFA_EDGE(literal166,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(BREAK,
	DFA_STATE 0:
		DFA_EDGE(literal95,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,6);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(ICR,5);
		DFA_EDGE(IDENTIFIER,6);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		DFA_EDGE(ICR,5);
		DFA_EDGE(IDENTIFIER,6);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(CARDINALITY,
	DFA_STATE 0:
		DFA_EDGE(literal5,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(CAST,
	DFA_STATE 0:
		DFA_EDGE(PARENTHETICAL,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(CASTS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal97,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(CEILING,
	DFA_STATE 0:
		DFA_EDGE(literal187,2);
		DFA_EDGE(literal233,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal234,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal9,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(COMMENT,
	DFA_STATE 0:
		DFA_EDGE(literal27,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal15,2);
		DFA_EDGE(parlex::builtins::all,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(COMPLEMENT,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal201,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(COMPOSITION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal216,2);
		DFA_EDGE(literal77,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(COMPOUND,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal186,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(CONDITIONAL,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal57,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal44,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(EXPRESSION,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::right);

DEFINE_DFA(CONSTRUCTIVE_OP,
	DFA_STATE 0:
		DFA_EDGE(COMPOSITION,1);
		DFA_EDGE(COMPOUND,1);
		DFA_EDGE(PREPEND,1);
		DFA_EDGE(NULL_COALESCE,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(CONTINUE,
	DFA_STATE 0:
		DFA_EDGE(literal101,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,6);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(ICR,5);
		DFA_EDGE(IDENTIFIER,6);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		DFA_EDGE(ICR,5);
		DFA_EDGE(IDENTIFIER,6);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(CROSS_PRODUCT,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal198,2);
		DFA_EDGE(literal79,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(DATE,
	DFA_STATE 0:
		DFA_EDGE(DATE_YEAR_MONTH_DAY,1);
		DFA_EDGE(DATE_YEAR_DAY,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DATE_TIME,
	DFA_STATE 0:
		DFA_EDGE(DATE,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal64,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(TIME,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DATE_YEAR_DAY,
	DFA_STATE 0:
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(parlex::builtins::decimal_digit,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(parlex::builtins::decimal_digit,3);
		break;
	DFA_STATE 3:
		DFA_EDGE(parlex::builtins::decimal_digit,4);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal21,5);
		break;
	DFA_STATE 5:
		DFA_EDGE(parlex::builtins::decimal_digit,6);
		break;
	DFA_STATE 6:
		DFA_EDGE(parlex::builtins::decimal_digit,7);
		break;
	DFA_STATE 7:
		DFA_EDGE(parlex::builtins::decimal_digit,8);
		break;
	DFA_STATE 8:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DATE_YEAR_MONTH_DAY,
	DFA_STATE 0:
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(parlex::builtins::decimal_digit,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(parlex::builtins::decimal_digit,3);
		break;
	DFA_STATE 3:
		DFA_EDGE(parlex::builtins::decimal_digit,4);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal21,5);
		break;
	DFA_STATE 5:
		DFA_EDGE(parlex::builtins::decimal_digit,6);
		break;
	DFA_STATE 6:
		DFA_EDGE(parlex::builtins::decimal_digit,7);
		break;
	DFA_STATE 7:
		DFA_EDGE(literal21,8);
		break;
	DFA_STATE 8:
		DFA_EDGE(parlex::builtins::decimal_digit,9);
		break;
	DFA_STATE 9:
		DFA_EDGE(parlex::builtins::decimal_digit,10);
		break;
	DFA_STATE 10:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DECLARATION,
	DFA_STATE 0:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DEFINITION,
	DFA_STATE 0:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal45,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DELTA,
	DFA_STATE 0:
		DFA_EDGE(literal200,1);
		DFA_EDGE(literal75,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(literal72,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(WHOLE_NUMBER,3);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,4);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DIMENSION,
	DFA_STATE 0:
		DFA_EDGE(DIMENSIONAL_ANALYSIS_OP,1);
		DFA_EDGE(IDENTIFIER,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DIMENSIONAL_ANALYSIS_OP,
	DFA_STATE 0:
		DFA_EDGE(UNIT_DIVISION,1);
		DFA_EDGE(UNIT_EXPONENTIATION,1);
		DFA_EDGE(UNIT_MULTIPLICATION,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DIMENSIONAL_NUMBER,
	DFA_STATE 0:
		DFA_EDGE(NON_NEG_NUMBER,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(DIMENSION,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DIVISION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal199,2);
		DFA_EDGE(literal26,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(DO,
	DFA_STATE 0:
		DFA_EDGE(literal104,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(PARENTHETICAL,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal170,2);
		DFA_EDGE(literal175,2);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(DOT_PRODUCT,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal76,2);
		DFA_EDGE(literal231,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(DOWNCASTS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal105,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EMBEDDED_COMMENT,
	DFA_STATE 0:
		DFA_EDGE(literal28,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EMBEDDED_COMMENT_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal14,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EMBEDDED_COMMENT_INTERIOR,
	DFA_STATE 0:
		DFA_EDGE(PAYLOAD,3);
		DFA_EDGE(literal13,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EMBEDDED_COMMENT_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal13,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EMBEDDED_NEWLINE_STRING,
	DFA_STATE 0:
		DFA_EDGE(literal4,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EMBEDDED_NEWLINE_STRING_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal4,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EMBEDDED_NEWLINE_STRING_INTERIOR,
	DFA_STATE 0:
		DFA_EDGE(literal0,2);
		DFA_EDGE(literal3,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EMBEDDED_NEWLINE_STRING_INTERIOR,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(PAYLOAD,4);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal3,5);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal0,5);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EMBEDDED_STRING,
	DFA_STATE 0:
		DFA_EDGE(literal4,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EMBEDDED_STRING_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal4,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EMBEDDED_STRING_INTERIOR,
	DFA_STATE 0:
		DFA_EDGE(PAYLOAD,3);
		DFA_EDGE(literal3,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EMBEDDED_STRING_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal3,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(END_OF_LINE_COMMENT,
	DFA_STATE 0:
		DFA_EDGE(literal29,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal0,2);
		DFA_EDGE(parlex::builtins::not_newline,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ENUM,
	DFA_STATE 0:
		DFA_EDGE(literal108,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal184,4);
		DFA_EDGE(literal129,2);
		DFA_EDGE(literal125,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(INHERITANCE_LIST,5);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(INHERITANCE_LIST,6);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(ENUM_ELEMENT,7);
		DFA_EDGE(literal193,9);
		break;
	DFA_STATE 5:
		DFA_EDGE(literal184,4);
		DFA_EDGE(literal125,3);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal184,4);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_EDGE(literal193,9);
		DFA_EDGE(literal46,8);
		DFA_EDGE(IC,7);
		break;
	DFA_STATE 8:
		DFA_EDGE(ENUM_ELEMENT,7);
		DFA_EDGE(IC,8);
		break;
	DFA_STATE 9:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ENUM_ELEMENT,
	DFA_STATE 0:
		DFA_EDGE(IDENTIFIER,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(literal45,1);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EQUALITY_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EQUALITY_CHAIN_LOOP,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EQUALITY_CHAIN_LOOP,
	DFA_STATE 0:
		DFA_EDGE(literal52,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(EQUALITY_CHAIN_LOOP,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EXACTLY,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal109,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EXISTS,
	DFA_STATE 0:
		DFA_EDGE(literal210,1);
		DFA_EDGE(literal110,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EXISTS_ONE,
	DFA_STATE 0:
		DFA_EDGE(literal111,1);
		DFA_EDGE(literal211,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(EXPONENTIATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal72,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::right);

DEFINE_DFA(EXPRESSION,
	DFA_STATE 0:
		DFA_EDGE(ARRAY,1);
		DFA_EDGE(ASM_FUNCTION,1);
		DFA_EDGE(BINARY_OP,1);
		DFA_EDGE(DIMENSIONAL_NUMBER,1);
		DFA_EDGE(DATE,1);
		DFA_EDGE(COMPLEMENT,1);
		DFA_EDGE(BOOL,1);
		DFA_EDGE(DATE_TIME,1);
		DFA_EDGE(DELTA,1);
		DFA_EDGE(CEILING,1);
		DFA_EDGE(CAST,1);
		DFA_EDGE(CONDITIONAL,1);
		DFA_EDGE(FLOOR,1);
		DFA_EDGE(EQUALITY_CHAIN,1);
		DFA_EDGE(EMBEDDED_STRING,1);
		DFA_EDGE(ENUM,1);
		DFA_EDGE(UNARY_OP,1);
		DFA_EDGE(STRING,1);
		DFA_EDGE(TUPLE,1);
		DFA_EDGE(SWIZZLE,1);
		DFA_EDGE(SUBSET_CHAIN,1);
		DFA_EDGE(THIS_TYPE,1);
		DFA_EDGE(THIS_FUNC,1);
		DFA_EDGE(TYPE,1);
		DFA_EDGE(THIS,1);
		DFA_EDGE(TIME,1);
		DFA_EDGE(SUPERSET_CHAIN,1);
		DFA_EDGE(RANGE,1);
		DFA_EDGE(REGEX,1);
		DFA_EDGE(SET,1);
		DFA_EDGE(SET_COMPREHENSION,1);
		DFA_EDGE(NON_NEG_NUMBER,1);
		DFA_EDGE(OBJECT,1);
		DFA_EDGE(PARENTHETICAL,1);
		DFA_EDGE(NEAREST_INTEGER,1);
		DFA_EDGE(literal136,1);
		DFA_EDGE(literal100,1);
		DFA_EDGE(IF,1);
		DFA_EDGE(INVOCATION,1);
		DFA_EDGE(LESSER_CHAIN,1);
		DFA_EDGE(MEMBER_ACCESS,1);
		DFA_EDGE(IDENTIFIER,1);
		DFA_EDGE(LIST,1);
		DFA_EDGE(MAGNITUDE,1);
		DFA_EDGE(MAP,1);
		DFA_EDGE(GREATER_CHAIN,1);
		DFA_EDGE(FUNCTION,1);
		DFA_EDGE(VECTOR_NORM,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FACTORIAL,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal2,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FLOOR,
	DFA_STATE 0:
		DFA_EDGE(literal235,1);
		DFA_EDGE(literal190,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal236,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal80,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FOR,
	DFA_STATE 0:
		DFA_EDGE(literal117,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal10,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(STATEMENT_SCOPE,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal46,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(ASSIGNMENT_CHAIN,7);
		DFA_EDGE(literal12,6);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(EXPRESSION,9);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_EDGE(literal19,8);
		DFA_EDGE(literal12,6);
		DFA_EDGE(IC,7);
		break;
	DFA_STATE 8:
		DFA_EDGE(ASSIGNMENT_CHAIN,7);
		DFA_EDGE(IC,8);
		break;
	DFA_STATE 9:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FOR_COLLECTION,
	DFA_STATE 0:
		DFA_EDGE(literal117,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal10,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(TYPE_DEREFERENCE,4);
		DFA_EDGE(IDENTIFIER,3);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal212,5);
		DFA_EDGE(literal128,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(IDENTIFIER,3);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(EXPRESSION,6);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal12,7);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_EDGE(EXPRESSION,8);
		DFA_EDGE(IC,7);
		break;
	DFA_STATE 8:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FREE,
	DFA_STATE 0:
		DFA_EDGE(literal118,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION,
	DFA_STATE 0:
		DFA_EDGE(BLOCK,6);
		DFA_EDGE(literal10,2);
		DFA_EDGE(FUNCTION_MODIFIER_0,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(BLOCK,6);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(PARAMETER,3);
		DFA_EDGE(literal12,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal19,5);
		DFA_EDGE(literal12,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(BLOCK,6);
		DFA_EDGE(FUNCTION_MODIFIER_0,1);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(PARAMETER,3);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_0,
	DFA_STATE 0:
		DFA_EDGE(FUNCTION_MODIFIER_STABILITY,1);
		DFA_EDGE(FUNCTION_MODIFIER_1,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_1,
	DFA_STATE 0:
		DFA_EDGE(FUNCTION_MODIFIER_THROWING,1);
		DFA_EDGE(FUNCTION_MODIFIER_2,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_2,
	DFA_STATE 0:
		DFA_EDGE(FUNCTION_MODIFIER_ATOMIC,1);
		DFA_EDGE(FUNCTION_MODIFIER_3,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_3,
	DFA_STATE 0:
		DFA_EDGE(FUNCTION_MODIFIER_PLATFORM,1);
		DFA_EDGE(FUNCTION_MODIFIER_4,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_4,
	DFA_STATE 0:
		DFA_EDGE(FUNCTION_MODIFIER_CALLING_CONVENTION,1);
		DFA_EDGE(FUNCTION_MODIFIER_MODEL,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_ATOMIC,
	DFA_STATE 0:
		DFA_EDGE(literal91,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(FUNCTION_MODIFIER_3,3);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(ICR,1);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_CALLING_CONVENTION,
	DFA_STATE 0:
		DFA_EDGE(literal89,1);
		DFA_EDGE(literal93,1);
		DFA_EDGE(literal179,1);
		DFA_EDGE(literal88,1);
		DFA_EDGE(literal102,1);
		DFA_EDGE(literal160,1);
		DFA_EDGE(literal87,1);
		DFA_EDGE(literal94,1);
		DFA_EDGE(literal155,1);
		DFA_EDGE(literal181,1);
		DFA_EDGE(literal92,1);
		DFA_EDGE(literal141,1);
		DFA_EDGE(literal148,1);
		DFA_EDGE(literal154,1);
		DFA_EDGE(literal177,1);
		DFA_EDGE(literal135,1);
		DFA_EDGE(literal96,1);
		DFA_EDGE(literal131,1);
		DFA_EDGE(literal121,1);
		DFA_EDGE(literal140,1);
		DFA_EDGE(literal66,1);
		DFA_EDGE(literal116,1);
		DFA_EDGE(literal180,1);
		DFA_EDGE(literal178,1);
		DFA_EDGE(literal122,1);
		DFA_EDGE(literal147,1);
		DFA_EDGE(literal99,1);
		DFA_EDGE(literal182,1);
		DFA_EDGE(literal86,1);
		DFA_EDGE(literal114,1);
		DFA_EDGE(literal119,1);
		DFA_EDGE(literal174,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_MODEL,
	DFA_STATE 0:
		DFA_EDGE(literal150,2);
		DFA_EDGE(literal138,2);
		DFA_EDGE(literal124,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(FUNCTION_MODIFIER_CALLING_CONVENTION,3);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(ICR,1);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_PLATFORM,
	DFA_STATE 0:
		DFA_EDGE(PLATFORM,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(PLATFORM,2);
		DFA_EDGE(FUNCTION_MODIFIER_4,3);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(ICR,1);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_STABILITY,
	DFA_STATE 0:
		DFA_EDGE(literal169,2);
		DFA_EDGE(literal156,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(FUNCTION_MODIFIER_1,3);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(ICR,1);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(FUNCTION_MODIFIER_THROWING,
	DFA_STATE 0:
		DFA_EDGE(literal165,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(FUNCTION_MODIFIER_2,4);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(ARRAY,3);
		DFA_EDGE(ICR,1);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(ICR,1);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(GREATER_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(GREATER_CHAIN_LOOP,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(GREATER_CHAIN_LOOP,
	DFA_STATE 0:
		DFA_EDGE(literal55,1);
		DFA_EDGE(literal54,1);
		DFA_EDGE(literal224,1);
		DFA_EDGE(literal52,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(GREATER_CHAIN_LOOP,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(HAS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal214,2);
		DFA_EDGE(literal120,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(HEX,
	DFA_STATE 0:
		DFA_EDGE(literal34,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(parlex::builtins::hexadecimal_digit,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(parlex::builtins::hexadecimal_digit,2);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IC,
	DFA_STATE 0:
		DFA_EDGE(COMMENT,1);
		DFA_EDGE(EMBEDDED_COMMENT,1);
		DFA_EDGE(END_OF_LINE_COMMENT,1);
		DFA_EDGE(WS,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(ICR,
	DFA_STATE 0:
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(IC,1);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IDENTIFIER,
	DFA_STATE 0:
		DFA_EDGE(literal74,1);
		DFA_EDGE(parlex::builtins::letter,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(literal74,1);
		DFA_EDGE(parlex::builtins::letter,1);
		DFA_EDGE(parlex::builtins::number,1);
		break;
, 0, &parlex::builtins::longest, parlex::associativity::none); 

DEFINE_DFA(IF,
	DFA_STATE 0:
		DFA_EDGE(literal123,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(PARENTHETICAL,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		DFA_EDGE(literal107,3);
		DFA_EDGE(literal106,1);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IFF,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal51,2);
		DFA_EDGE(literal208,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(IMPLEMENTS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal126,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IMPLICATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal54,2);
		DFA_EDGE(literal207,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::right);

DEFINE_DFA(IMPLICIT_TYPE_DEREFERENCE,
	DFA_STATE 0:
		DFA_EDGE(literal47,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal55,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IMPORT,
	DFA_STATE 0:
		DFA_EDGE(literal127,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal212,2);
		DFA_EDGE(literal128,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(INEQUALITY,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal222,2);
		DFA_EDGE(literal30,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(INHERITANCE_ITEM_PREFIX,
	DFA_STATE 0:
		DFA_EDGE(literal103,2);
		DFA_EDGE(VISIBILITY_MODIFIER,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(ICR,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(ICR,4);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal103,2);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(INHERITANCE_LIST,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(INHERITANCE_ITEM_PREFIX,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(INHERITANCE_ITEM_PREFIX,1);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal19,2);
		DFA_EDGE(IC,3);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(INHERITS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal130,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(INTEGER_DIVISION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal70,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(INTERSECTION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal220,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(INVOCATION,
	DFA_STATE 0:
		DFA_EDGE(ARRAY_INVOCATION,1);
		DFA_EDGE(TYPE_INVOCATION,1);
		DFA_EDGE(PARENTHETICAL_INVOCATION,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(IS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal133,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(KLEENE_STAR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal13,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(LESSER_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(LESSER_CHAIN_LOOP,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(LESSER_CHAIN_LOOP,
	DFA_STATE 0:
		DFA_EDGE(literal53,1);
		DFA_EDGE(literal47,1);
		DFA_EDGE(literal223,1);
		DFA_EDGE(literal52,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(LESSER_CHAIN_LOOP,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(LIST,
	DFA_STATE 0:
		DFA_EDGE(literal69,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(literal189,4);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal189,4);
		DFA_EDGE(literal20,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(LOCK,
	DFA_STATE 0:
		DFA_EDGE(literal134,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(PARENTHETICAL,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(BLOCK,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(LOOP,
	DFA_STATE 0:
		DFA_EDGE(literal170,1);
		DFA_EDGE(literal175,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(PARENTHETICAL,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(MAGNITUDE,
	DFA_STATE 0:
		DFA_EDGE(literal186,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal186,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(MAP,
	DFA_STATE 0:
		DFA_EDGE(literal184,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(literal193,6);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal44,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal193,6);
		DFA_EDGE(literal19,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(MAPS_TO,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal204,2);
		DFA_EDGE(literal23,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::right);

DEFINE_DFA(MEMBER_ACCESS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal24,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(IDENTIFIER,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(MEMBER_OFFSET,
	DFA_STATE 0:
		DFA_EDGE(literal59,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IC,1);
		DFA_EDGE(WHOLE_NUMBER,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(MODULATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal6,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(MULTIPLICATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal13,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(MULTIPLICATIVE_OP,
	DFA_STATE 0:
		DFA_EDGE(CROSS_PRODUCT,1);
		DFA_EDGE(DOT_PRODUCT,1);
		DFA_EDGE(MULTIPLICATION,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NAND,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal203,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(NEAREST_INTEGER,
	DFA_STATE 0:
		DFA_EDGE(literal235,1);
		DFA_EDGE(literal190,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal234,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal9,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NEGATION,
	DFA_STATE 0:
		DFA_EDGE(literal21,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NON_FRACTIONAL,
	DFA_STATE 0:
		DFA_EDGE(NON_NEG_NON_FRACTIONAL,2);
		DFA_EDGE(literal21,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(NON_NEG_NON_FRACTIONAL,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NON_NEG_FRACTIONAL,
	DFA_STATE 0:
		DFA_EDGE(literal24,2);
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal24,3);
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(parlex::builtins::decimal_digit,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(parlex::builtins::decimal_digit,3);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NON_NEG_INTEGER,
	DFA_STATE 0:
		DFA_EDGE(NON_ZERO_DECIMAL_DIGIT,1);
		DFA_EDGE(literal33,2);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NON_NEG_NON_FRACTIONAL,
	DFA_STATE 0:
		DFA_EDGE(OCTAL,1);
		DFA_EDGE(NON_NEG_INTEGER,1);
		DFA_EDGE(HEX,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NON_NEG_NUMBER,
	DFA_STATE 0:
		DFA_EDGE(NON_NEG_FRACTIONAL,1);
		DFA_EDGE(NON_NEG_NON_FRACTIONAL,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NON_ZERO_DECIMAL_DIGIT,
	DFA_STATE 0:
		DFA_EDGE(literal41,1);
		DFA_EDGE(literal40,1);
		DFA_EDGE(literal38,1);
		DFA_EDGE(literal43,1);
		DFA_EDGE(literal42,1);
		DFA_EDGE(literal39,1);
		DFA_EDGE(literal35,1);
		DFA_EDGE(literal36,1);
		DFA_EDGE(literal37,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NOR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal205,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(NOT,
	DFA_STATE 0:
		DFA_EDGE(literal194,1);
		DFA_EDGE(literal196,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(NOT_HAS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal215,2);
		DFA_EDGE(literal31,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(NOT_IN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal32,2);
		DFA_EDGE(literal213,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(NULL_COALESCE,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal58,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(OBJECT,
	DFA_STATE 0:
		DFA_EDGE(literal137,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal184,4);
		DFA_EDGE(literal129,2);
		DFA_EDGE(literal125,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(INHERITANCE_LIST,5);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(INHERITANCE_LIST,6);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(TYPE_SCOPE,7);
		break;
	DFA_STATE 5:
		DFA_EDGE(literal184,4);
		DFA_EDGE(literal125,3);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal184,4);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_EDGE(literal193,8);
		break;
	DFA_STATE 8:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(OCTAL,
	DFA_STATE 0:
		DFA_EDGE(literal33,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(parlex::builtins::octal_digit,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(parlex::builtins::octal_digit,2);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(OR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal139,2);
		DFA_EDGE(literal219,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(PARAMETER,
	DFA_STATE 0:
		DFA_EDGE(PARAMETER_ANALYTIC,1);
		DFA_EDGE(PARAMETER_NATURAL,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PARAMETER_ANALYTIC,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(literal52,1);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PARAMETER_NATURAL,
	DFA_STATE 0:
		DFA_EDGE(TYPE_DEREFERENCE,2);
		DFA_EDGE(IDENTIFIER,6);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,5);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(IDENTIFIER,6);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal52,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(EXPRESSION,8);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(literal25,3);
		DFA_EDGE(literal52,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		DFA_EDGE(literal25,7);
		DFA_EDGE(literal52,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 7:
		DFA_ACCEPT;
		DFA_EDGE(literal52,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 8:
		DFA_ACCEPT;
		DFA_EDGE(literal25,9);
		break;
	DFA_STATE 9:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PARENTHETICAL,
	DFA_STATE 0:
		DFA_EDGE(literal10,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal12,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PARENTHETICAL_INVOCATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal10,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(ARGUMENT_PACK,3);
		DFA_EDGE(ARGUMENT,3);
		DFA_EDGE(literal19,2);
		DFA_EDGE(literal12,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal19,2);
		DFA_EDGE(literal12,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PAYLOAD,
	DFA_STATE 0:
		DFA_EDGE(parlex::builtins::all,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PLATFORM,
	DFA_STATE 0:
		DFA_EDGE(literal74,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(PLATFORM,1);
		DFA_EDGE(parlex::builtins::letter,1);
		DFA_EDGE(parlex::builtins::number,1);
		break;
, 0, &parlex::builtins::longest, parlex::associativity::none); 

DEFINE_DFA(POST_DEC,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal22,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(POST_INC,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal17,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PREPEND,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal7,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::right);

DEFINE_DFA(PRE_DEC,
	DFA_STATE 0:
		DFA_EDGE(literal22,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(PRE_INC,
	DFA_STATE 0:
		DFA_EDGE(literal17,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(RADICAL,
	DFA_STATE 0:
		DFA_EDGE(literal217,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(RANGE,
	DFA_STATE 0:
		DFA_EDGE(literal68,1);
		DFA_EDGE(literal10,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(literal25,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal25,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(EXPRESSION,6);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_EDGE(EXPRESSION,6);
		DFA_EDGE(literal12,7);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal12,7);
		DFA_EDGE(literal71,7);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(READ_LOCK,
	DFA_STATE 0:
		DFA_EDGE(literal151,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(PARENTHETICAL,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(RECORD,
	DFA_STATE 0:
		DFA_EDGE(literal152,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(TYPE,2);
		DFA_EDGE(ICR,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(REGEX,
	DFA_STATE 0:
		DFA_EDGE(literal63,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(STRING,2);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(RELATIONAL_COLLECTION_OP,
	DFA_STATE 0:
		DFA_EDGE(NOT_IN,1);
		DFA_EDGE(NOT_HAS,1);
		DFA_EDGE(IN,1);
		DFA_EDGE(HAS,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(RELATIONAL_OP,
	DFA_STATE 0:
		DFA_EDGE(DOWNCASTS,1);
		DFA_EDGE(CASTS,1);
		DFA_EDGE(EXACTLY,1);
		DFA_EDGE(RELATIONAL_COLLECTION_OP,1);
		DFA_EDGE(IS,1);
		DFA_EDGE(INEQUALITY,1);
		DFA_EDGE(IMPLEMENTS,1);
		DFA_EDGE(INHERITS,1);
		DFA_EDGE(UPCASTS,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(RETURN,
	DFA_STATE 0:
		DFA_EDGE(literal153,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,5);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,5);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SET,
	DFA_STATE 0:
		DFA_EDGE(literal185,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(literal192,4);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal192,4);
		DFA_EDGE(literal19,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SET_COMPREHENSION,
	DFA_STATE 0:
		DFA_EDGE(literal184,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal186,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal193,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SHIFTL,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal50,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(SHIFTR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal56,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(SLICE,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal44,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(STATEMENT,
	DFA_STATE 0:
		DFA_EDGE(ASSIGNMENT_CHAIN,1);
		DFA_EDGE(CONTINUE,1);
		DFA_EDGE(DO,1);
		DFA_EDGE(BREAK,1);
		DFA_EDGE(DEFINITION,1);
		DFA_EDGE(EXPRESSION,1);
		DFA_EDGE(FOR,1);
		DFA_EDGE(FOR_COLLECTION,1);
		DFA_EDGE(THROW,1);
		DFA_EDGE(TRY,1);
		DFA_EDGE(TYPE_CONSTRAINT,1);
		DFA_EDGE(RETURN,1);
		DFA_EDGE(READ_LOCK,1);
		DFA_EDGE(IMPORT,1);
		DFA_EDGE(LOOP,1);
		DFA_EDGE(LOCK,1);
		DFA_EDGE(FREE,1);
		DFA_EDGE(WRITE_LOCK,1);
		DFA_EDGE(USING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal46,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(STATEMENT_SCOPE,
	DFA_STATE 0:
		DFA_ACCEPT;
		DFA_EDGE(STATEMENT,0);
		DFA_EDGE(IC,0);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(STRING,
	DFA_STATE 0:
		DFA_EDGE(parlex::builtins::c_string,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SUBSET_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(SUBSET_CHAIN_LOOP,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SUBSET_CHAIN_LOOP,
	DFA_STATE 0:
		DFA_EDGE(literal225,1);
		DFA_EDGE(literal145,1);
		DFA_EDGE(literal52,1);
		DFA_EDGE(literal158,1);
		DFA_EDGE(literal227,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(SUBSET_CHAIN_LOOP,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SUBTRACTION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal21,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(SUPERSET_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(SUPERSET_CHAIN_LOOP,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SUPERSET_CHAIN_LOOP,
	DFA_STATE 0:
		DFA_EDGE(literal52,1);
		DFA_EDGE(literal146,1);
		DFA_EDGE(literal159,1);
		DFA_EDGE(literal226,1);
		DFA_EDGE(literal228,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(SUPERSET_CHAIN_LOOP,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SWIZZLE,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal232,2);
		DFA_EDGE(literal78,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(SYMMETRIC_DIFFERENCE,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal230,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(THIS,
	DFA_STATE 0:
		DFA_EDGE(literal161,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(THIS_FUNC,
	DFA_STATE 0:
		DFA_EDGE(literal162,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(THIS_TYPE,
	DFA_STATE 0:
		DFA_EDGE(literal163,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(THROW,
	DFA_STATE 0:
		DFA_EDGE(literal164,3);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal71,5);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(literal68,1);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		DFA_EDGE(EXPRESSION,4);
		DFA_EDGE(IC,5);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TIME,
	DFA_STATE 0:
		DFA_EDGE(literal21,2);
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(parlex::builtins::decimal_digit,3);
		break;
	DFA_STATE 2:
		DFA_EDGE(parlex::builtins::decimal_digit,1);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal44,4);
		break;
	DFA_STATE 4:
		DFA_EDGE(parlex::builtins::decimal_digit,5);
		break;
	DFA_STATE 5:
		DFA_EDGE(parlex::builtins::decimal_digit,6);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal44,7);
		break;
	DFA_STATE 7:
		DFA_EDGE(parlex::builtins::decimal_digit,8);
		break;
	DFA_STATE 8:
		DFA_EDGE(parlex::builtins::decimal_digit,14);
		break;
	DFA_STATE 9:
		DFA_EDGE(parlex::builtins::decimal_digit,11);
		break;
	DFA_STATE 10:
		DFA_EDGE(parlex::builtins::decimal_digit,16);
		break;
	DFA_STATE 11:
		DFA_EDGE(parlex::builtins::decimal_digit,17);
		break;
	DFA_STATE 12:
		DFA_EDGE(parlex::builtins::decimal_digit,13);
		break;
	DFA_STATE 13:
		DFA_EDGE(parlex::builtins::decimal_digit,15);
		break;
	DFA_STATE 14:
		DFA_ACCEPT;
		DFA_EDGE(literal24,10);
		DFA_EDGE(literal16,9);
		DFA_EDGE(literal21,9);
		DFA_EDGE(literal67,15);
		break;
	DFA_STATE 15:
		DFA_ACCEPT;
		break;
	DFA_STATE 16:
		DFA_ACCEPT;
		DFA_EDGE(literal16,9);
		DFA_EDGE(literal21,9);
		DFA_EDGE(literal67,15);
		DFA_EDGE(parlex::builtins::decimal_digit,16);
		break;
	DFA_STATE 17:
		DFA_ACCEPT;
		DFA_EDGE(literal44,12);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TRY,
	DFA_STATE 0:
		DFA_EDGE(literal167,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal98,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(EXPRESSION,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(EXPRESSION,7);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		DFA_EDGE(literal98,3);
		DFA_EDGE(literal115,4);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 6:
		DFA_ACCEPT;
		DFA_EDGE(literal115,4);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TUPLE,
	DFA_STATE 0:
		DFA_EDGE(literal11,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal19,1);
		DFA_EDGE(literal188,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE,
	DFA_STATE 0:
		DFA_EDGE(literal168,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal184,4);
		DFA_EDGE(literal129,2);
		DFA_EDGE(literal125,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(INHERITANCE_LIST,5);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(INHERITANCE_LIST,6);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(TYPE_SCOPE,7);
		break;
	DFA_STATE 5:
		DFA_EDGE(literal184,4);
		DFA_EDGE(literal125,3);
		DFA_EDGE(IC,5);
		break;
	DFA_STATE 6:
		DFA_EDGE(literal184,4);
		DFA_EDGE(IC,6);
		break;
	DFA_STATE 7:
		DFA_EDGE(literal193,8);
		break;
	DFA_STATE 8:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_CONSTRAINT,
	DFA_STATE 0:
		DFA_EDGE(TYPE_CONSTRAINT_HEAD,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(TYPE_CONSTRAINT_CHAIN,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_CONSTRAINT_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(ASSIGNMENT_CHAIN,2);
		DFA_EDGE(DECLARATION,2);
		DFA_EDGE(DEFINITION,2);
		break;
	DFA_STATE 1:
		DFA_EDGE(TYPE_CONSTRAINT_CHAIN,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(literal19,1);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_CONSTRAINT_HEAD,
	DFA_STATE 0:
		DFA_EDGE(ATTRIBUTE,1);
		DFA_EDGE(TYPE_DEREFERENCE,5);
		DFA_EDGE(literal112,3);
		DFA_EDGE(literal157,2);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,5);
		DFA_EDGE(VOLATILE_TYPE_DEREFERENCE,5);
		DFA_EDGE(VISIBILITY_MODIFIER,4);
		DFA_EDGE(VOLATILE_IMPLICIT_TYPE_DEREFERENCE,5);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(ATTRIBUTE,1);
		DFA_EDGE(TYPE_DEREFERENCE,5);
		DFA_EDGE(literal112,3);
		DFA_EDGE(literal157,2);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,5);
		DFA_EDGE(IC,1);
		DFA_EDGE(VOLATILE_TYPE_DEREFERENCE,5);
		DFA_EDGE(VISIBILITY_MODIFIER,4);
		DFA_EDGE(VOLATILE_IMPLICIT_TYPE_DEREFERENCE,5);
		break;
	DFA_STATE 2:
		DFA_EDGE(TYPE_DEREFERENCE,5);
		DFA_EDGE(literal112,3);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,5);
		DFA_EDGE(IC,2);
		DFA_EDGE(VOLATILE_TYPE_DEREFERENCE,5);
		DFA_EDGE(VOLATILE_IMPLICIT_TYPE_DEREFERENCE,5);
		break;
	DFA_STATE 3:
		DFA_EDGE(TYPE_DEREFERENCE,5);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,5);
		DFA_EDGE(IC,3);
		DFA_EDGE(VOLATILE_TYPE_DEREFERENCE,5);
		DFA_EDGE(VOLATILE_IMPLICIT_TYPE_DEREFERENCE,5);
		break;
	DFA_STATE 4:
		DFA_EDGE(TYPE_DEREFERENCE,5);
		DFA_EDGE(literal112,3);
		DFA_EDGE(literal157,2);
		DFA_EDGE(IMPLICIT_TYPE_DEREFERENCE,5);
		DFA_EDGE(IC,4);
		DFA_EDGE(VOLATILE_TYPE_DEREFERENCE,5);
		DFA_EDGE(VOLATILE_IMPLICIT_TYPE_DEREFERENCE,5);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_DEREFERENCE,
	DFA_STATE 0:
		DFA_EDGE(literal47,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal55,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_INVOCATION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal47,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(ARGUMENT_PACK,3);
		DFA_EDGE(ARGUMENT,3);
		DFA_EDGE(literal55,4);
		DFA_EDGE(literal19,2);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal55,4);
		DFA_EDGE(literal19,2);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_SCOPE,
	DFA_STATE 0:
		DFA_ACCEPT;
		DFA_EDGE(TYPE_STATEMENT,0);
		DFA_EDGE(IC,0);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_SCOPE_ASSIGNMENT_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal48,3);
		DFA_EDGE(literal202,3);
		DFA_EDGE(MEMBER_OFFSET,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(ASSIGNMENT_CHAIN,5);
		DFA_EDGE(EXPRESSION,5);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(literal48,3);
		DFA_EDGE(literal202,3);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_SCOPE_DECLARATION,
	DFA_STATE 0:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(IDENTIFIER,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		DFA_EDGE(MEMBER_OFFSET,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_SCOPE_TYPE_CONSTRAINT,
	DFA_STATE 0:
		DFA_EDGE(TYPE_CONSTRAINT_HEAD,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN,
	DFA_STATE 0:
		DFA_EDGE(DEFINITION,3);
		DFA_EDGE(TYPE_SCOPE_ASSIGNMENT_CHAIN,3);
		DFA_EDGE(TYPE_SCOPE_DECLARATION,3);
		DFA_EDGE(XML_DOC_STRING,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(DEFINITION,3);
		DFA_EDGE(TYPE_SCOPE_ASSIGNMENT_CHAIN,3);
		DFA_EDGE(TYPE_SCOPE_DECLARATION,3);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN,4);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		DFA_EDGE(literal19,2);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(TYPE_STATEMENT,
	DFA_STATE 0:
		DFA_EDGE(TYPE_SCOPE_TYPE_CONSTRAINT,2);
		DFA_EDGE(STATEMENT,2);
		DFA_EDGE(VISIBILITY_MODIFIER,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal44,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(UNARY_ARITHMETIC_OP,
	DFA_STATE 0:
		DFA_EDGE(FACTORIAL,1);
		DFA_EDGE(PRE_INC,1);
		DFA_EDGE(RADICAL,1);
		DFA_EDGE(PRE_DEC,1);
		DFA_EDGE(NEGATION,1);
		DFA_EDGE(POST_DEC,1);
		DFA_EDGE(POST_INC,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(UNARY_LOGICAL_OP,
	DFA_STATE 0:
		DFA_EDGE(ALL,1);
		DFA_EDGE(EXISTS_ONE,1);
		DFA_EDGE(EXISTS,1);
		DFA_EDGE(NOT,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(UNARY_OP,
	DFA_STATE 0:
		DFA_EDGE(ALLOCATION,1);
		DFA_EDGE(CARDINALITY,1);
		DFA_EDGE(UNARY_ARITHMETIC_OP,1);
		DFA_EDGE(UNARY_LOGICAL_OP,1);
		DFA_EDGE(KLEENE_STAR,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(UNION,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal221,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::any);

DEFINE_DFA(UNIT_DIVISION,
	DFA_STATE 0:
		DFA_EDGE(DIMENSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal26,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(DIMENSION,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(UNIT_EXPONENTIATION,
	DFA_STATE 0:
		DFA_EDGE(DIMENSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal72,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(NON_FRACTIONAL,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::right);

DEFINE_DFA(UNIT_MULTIPLICATION,
	DFA_STATE 0:
		DFA_EDGE(DIMENSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal13,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(DIMENSION,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);

DEFINE_DFA(UPCASTS,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal171,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(USING,
	DFA_STATE 0:
		DFA_EDGE(literal172,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal10,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal12,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_EDGE(BLOCK,5);
		DFA_EDGE(IC,4);
		break;
	DFA_STATE 5:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(VECTOR_NORM,
	DFA_STATE 0:
		DFA_EDGE(literal191,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(EXPRESSION,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal191,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(VISIBILITY_MODIFIER,
	DFA_STATE 0:
		DFA_EDGE(literal142,1);
		DFA_EDGE(literal149,1);
		DFA_EDGE(literal143,1);
		DFA_EDGE(literal144,1);
		DFA_EDGE(literal132,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(VOLATILE_IMPLICIT_TYPE_DEREFERENCE,
	DFA_STATE 0:
		DFA_EDGE(literal47,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal173,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal55,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(VOLATILE_TYPE_DEREFERENCE,
	DFA_STATE 0:
		DFA_EDGE(literal47,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal173,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_EDGE(literal55,4);
		DFA_EDGE(IC,3);
		break;
	DFA_STATE 4:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(WHOLE_NUMBER,
	DFA_STATE 0:
		DFA_EDGE(literal41,1);
		DFA_EDGE(literal40,1);
		DFA_EDGE(literal38,1);
		DFA_EDGE(literal43,1);
		DFA_EDGE(literal42,1);
		DFA_EDGE(literal39,1);
		DFA_EDGE(literal35,1);
		DFA_EDGE(literal36,1);
		DFA_EDGE(literal37,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(literal33,1);
		DFA_EDGE(literal41,1);
		DFA_EDGE(literal40,1);
		DFA_EDGE(literal38,1);
		DFA_EDGE(literal43,1);
		DFA_EDGE(literal42,1);
		DFA_EDGE(literal39,1);
		DFA_EDGE(literal35,1);
		DFA_EDGE(literal36,1);
		DFA_EDGE(literal37,1);
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(WRITE_LOCK,
	DFA_STATE 0:
		DFA_EDGE(literal176,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(PARENTHETICAL,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(WS,
	DFA_STATE 0:
		DFA_EDGE(parlex::builtins::white_space,1);
		break;
	DFA_STATE 1:
		DFA_ACCEPT;
		DFA_EDGE(parlex::builtins::white_space,1);
		break;
, 0, &parlex::builtins::longest, parlex::associativity::none); 

DEFINE_DFA(XML_DOC_STRING,
	DFA_STATE 0:
		DFA_EDGE(literal82,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(XML_DOC_STRING_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal82,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(XML_DOC_STRING_INTERIOR,
	DFA_STATE 0:
		DFA_EDGE(PAYLOAD,3);
		DFA_EDGE(literal81,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(XML_DOC_STRING_INTERIOR,2);
		break;
	DFA_STATE 2:
		DFA_EDGE(literal81,3);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::none);

DEFINE_DFA(XOR,
	DFA_STATE 0:
		DFA_EDGE(EXPRESSION,1);
		break;
	DFA_STATE 1:
		DFA_EDGE(literal183,2);
		DFA_EDGE(literal229,2);
		DFA_EDGE(IC,1);
		break;
	DFA_STATE 2:
		DFA_EDGE(EXPRESSION,3);
		DFA_EDGE(IC,2);
		break;
	DFA_STATE 3:
		DFA_ACCEPT;
		break;
, 0, parlex::associativity::left);


DEFINE_GRAMMAR(
	plange,
	STATEMENT_SCOPE,
	({
		ADDITION, 
		ADD_SUB, 
		ALL, 
		ALLOCATION, 
		AND, 
		ARGUMENT, 
		ARGUMENT_PACK, 
		ARRAY, 
		ARRAY_INDEXER, 
		ARRAY_INVOCATION, 
		ASM_EXPRESSION, 
		ASM_FUNCTION, 
		ASM_IDENTIFIER, 
		ASM_OP, 
		ASM_PTR_ARITHMETIC_ATT, 
		ASM_PTR_ARITHMETIC_ATT_REG, 
		ASM_PTR_ARITHMETIC_INTEL, 
		ASM_SCOPE, 
		ASM_STATEMENT, 
		ASSIGNMENT_CHAIN, 
		ATTRIBUTE, 
		BIJECTION, 
		BINARY_ARITHMETIC_OP, 
		BINARY_COLLECTION_OP, 
		BINARY_LOGICAL_OP, 
		BINARY_OP, 
		BITWISE_OP, 
		BIT_AND, 
		BIT_NOT, 
		BIT_OR, 
		BIT_XOR, 
		BLOCK, 
		BOOL, 
		BREAK, 
		CARDINALITY, 
		CAST, 
		CASTS, 
		CEILING, 
		COMMENT, 
		COMPLEMENT, 
		COMPOSITION, 
		COMPOUND, 
		CONDITIONAL, 
		CONSTRUCTIVE_OP, 
		CONTINUE, 
		CROSS_PRODUCT, 
		DATE, 
		DATE_TIME, 
		DATE_YEAR_DAY, 
		DATE_YEAR_MONTH_DAY, 
		DECLARATION, 
		DEFINITION, 
		DELTA, 
		DIMENSION, 
		DIMENSIONAL_ANALYSIS_OP, 
		DIMENSIONAL_NUMBER, 
		DIVISION, 
		DO, 
		DOT_PRODUCT, 
		DOWNCASTS, 
		EMBEDDED_COMMENT, 
		EMBEDDED_COMMENT_INTERIOR, 
		EMBEDDED_NEWLINE_STRING, 
		EMBEDDED_NEWLINE_STRING_INTERIOR, 
		EMBEDDED_STRING, 
		EMBEDDED_STRING_INTERIOR, 
		END_OF_LINE_COMMENT, 
		ENUM, 
		ENUM_ELEMENT, 
		EQUALITY_CHAIN, 
		EQUALITY_CHAIN_LOOP, 
		EXACTLY, 
		EXISTS, 
		EXISTS_ONE, 
		EXPONENTIATION, 
		EXPRESSION, 
		FACTORIAL, 
		FLOOR, 
		FOR, 
		FOR_COLLECTION, 
		FREE, 
		FUNCTION, 
		FUNCTION_MODIFIER_0, 
		FUNCTION_MODIFIER_1, 
		FUNCTION_MODIFIER_2, 
		FUNCTION_MODIFIER_3, 
		FUNCTION_MODIFIER_4, 
		FUNCTION_MODIFIER_ATOMIC, 
		FUNCTION_MODIFIER_CALLING_CONVENTION, 
		FUNCTION_MODIFIER_MODEL, 
		FUNCTION_MODIFIER_PLATFORM, 
		FUNCTION_MODIFIER_STABILITY, 
		FUNCTION_MODIFIER_THROWING, 
		GREATER_CHAIN, 
		GREATER_CHAIN_LOOP, 
		HAS, 
		HEX, 
		IC, 
		ICR, 
		IDENTIFIER, 
		IF, 
		IFF, 
		IMPLEMENTS, 
		IMPLICATION, 
		IMPLICIT_TYPE_DEREFERENCE, 
		IMPORT, 
		IN, 
		INEQUALITY, 
		INHERITANCE_ITEM_PREFIX, 
		INHERITANCE_LIST, 
		INHERITS, 
		INTEGER_DIVISION, 
		INTERSECTION, 
		INVOCATION, 
		IS, 
		KLEENE_STAR, 
		LESSER_CHAIN, 
		LESSER_CHAIN_LOOP, 
		LIST, 
		LOCK, 
		LOOP, 
		MAGNITUDE, 
		MAP, 
		MAPS_TO, 
		MEMBER_ACCESS, 
		MEMBER_OFFSET, 
		MODULATION, 
		MULTIPLICATION, 
		MULTIPLICATIVE_OP, 
		NAND, 
		NEAREST_INTEGER, 
		NEGATION, 
		NON_FRACTIONAL, 
		NON_NEG_FRACTIONAL, 
		NON_NEG_INTEGER, 
		NON_NEG_NON_FRACTIONAL, 
		NON_NEG_NUMBER, 
		NON_ZERO_DECIMAL_DIGIT, 
		NOR, 
		NOT, 
		NOT_HAS, 
		NOT_IN, 
		NULL_COALESCE, 
		OBJECT, 
		OCTAL, 
		OR, 
		PARAMETER, 
		PARAMETER_ANALYTIC, 
		PARAMETER_NATURAL, 
		PARENTHETICAL, 
		PARENTHETICAL_INVOCATION, 
		PAYLOAD, 
		PLATFORM, 
		POST_DEC, 
		POST_INC, 
		PREPEND, 
		PRE_DEC, 
		PRE_INC, 
		RADICAL, 
		RANGE, 
		READ_LOCK, 
		RECORD, 
		REGEX, 
		RELATIONAL_COLLECTION_OP, 
		RELATIONAL_OP, 
		RETURN, 
		SET, 
		SET_COMPREHENSION, 
		SHIFTL, 
		SHIFTR, 
		SLICE, 
		STATEMENT, 
		STATEMENT_SCOPE, 
		STRING, 
		SUBSET_CHAIN, 
		SUBSET_CHAIN_LOOP, 
		SUBTRACTION, 
		SUPERSET_CHAIN, 
		SUPERSET_CHAIN_LOOP, 
		SWIZZLE, 
		SYMMETRIC_DIFFERENCE, 
		THIS, 
		THIS_FUNC, 
		THIS_TYPE, 
		THROW, 
		TIME, 
		TRY, 
		TUPLE, 
		TYPE, 
		TYPE_CONSTRAINT, 
		TYPE_CONSTRAINT_CHAIN, 
		TYPE_CONSTRAINT_HEAD, 
		TYPE_DEREFERENCE, 
		TYPE_INVOCATION, 
		TYPE_SCOPE, 
		TYPE_SCOPE_ASSIGNMENT_CHAIN, 
		TYPE_SCOPE_DECLARATION, 
		TYPE_SCOPE_TYPE_CONSTRAINT, 
		TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN, 
		TYPE_STATEMENT, 
		UNARY_ARITHMETIC_OP, 
		UNARY_LOGICAL_OP, 
		UNARY_OP, 
		UNION, 
		UNIT_DIVISION, 
		UNIT_EXPONENTIATION, 
		UNIT_MULTIPLICATION, 
		UPCASTS, 
		USING, 
		VECTOR_NORM, 
		VISIBILITY_MODIFIER, 
		VOLATILE_IMPLICIT_TYPE_DEREFERENCE, 
		VOLATILE_TYPE_DEREFERENCE, 
		WHOLE_NUMBER, 
		WRITE_LOCK, 
		WS, 
		XML_DOC_STRING, 
		XML_DOC_STRING_INTERIOR, 
		XOR, 
	}),
	({
		GRAMMAR_PRECEDENCE(AND, OR),
		GRAMMAR_PRECEDENCE(AND, IMPLICATION),
		GRAMMAR_PRECEDENCE(AND, IFF),
		GRAMMAR_PRECEDENCE(AND, XOR),
		GRAMMAR_PRECEDENCE(ASSIGNMENT_CHAIN, EXPRESSION),
		GRAMMAR_PRECEDENCE(ASSIGNMENT_CHAIN, LESSER_CHAIN),
		GRAMMAR_PRECEDENCE(DIMENSIONAL_NUMBER, BINARY_OP),
		GRAMMAR_PRECEDENCE(DIMENSIONAL_NUMBER, EXPONENTIATION),
		GRAMMAR_PRECEDENCE(CROSS_PRODUCT, DOT_PRODUCT),
		GRAMMAR_PRECEDENCE(COMPLEMENT, BINARY_OP),
		GRAMMAR_PRECEDENCE(DATE_YEAR_MONTH_DAY, SUBTRACTION),
		GRAMMAR_PRECEDENCE(CARDINALITY, BINARY_OP),
		GRAMMAR_PRECEDENCE(DELTA, BINARY_OP),
		GRAMMAR_PRECEDENCE(DELTA, EXPONENTIATION),
		GRAMMAR_PRECEDENCE(EMBEDDED_COMMENT, COMMENT),
		GRAMMAR_PRECEDENCE(CAST, BINARY_OP),
		GRAMMAR_PRECEDENCE(DIVISION, ADDITION),
		GRAMMAR_PRECEDENCE(DIVISION, ADD_SUB),
		GRAMMAR_PRECEDENCE(DIVISION, SUBTRACTION),
		GRAMMAR_PRECEDENCE(DIVISION, INTEGER_DIVISION),
		GRAMMAR_PRECEDENCE(DIVISION, MODULATION),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, ADDITION),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, ADD_SUB),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, DIVISION),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, SUBTRACTION),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, MULTIPLICATIVE_OP),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, INTEGER_DIVISION),
		GRAMMAR_PRECEDENCE(EXPONENTIATION, MODULATION),
		GRAMMAR_PRECEDENCE(FACTORIAL, BINARY_OP),
		GRAMMAR_PRECEDENCE(EMBEDDED_NEWLINE_STRING, EMBEDDED_STRING),
		GRAMMAR_PRECEDENCE(EMBEDDED_NEWLINE_STRING, STRING),
		GRAMMAR_PRECEDENCE(EQUALITY_CHAIN, SUBSET_CHAIN),
		GRAMMAR_PRECEDENCE(EQUALITY_CHAIN, SUPERSET_CHAIN),
		GRAMMAR_PRECEDENCE(EQUALITY_CHAIN, LESSER_CHAIN),
		GRAMMAR_PRECEDENCE(EQUALITY_CHAIN, GREATER_CHAIN),
		GRAMMAR_PRECEDENCE(EQUALITY_CHAIN_LOOP, EXPRESSION),
		GRAMMAR_PRECEDENCE(EMBEDDED_STRING, STRING),
		GRAMMAR_PRECEDENCE(SUPERSET_CHAIN_LOOP, EXPRESSION),
		GRAMMAR_PRECEDENCE(SUBSET_CHAIN_LOOP, EXPRESSION),
		GRAMMAR_PRECEDENCE(TUPLE, MAGNITUDE),
		GRAMMAR_PRECEDENCE(TYPE_SCOPE_ASSIGNMENT_CHAIN, EXPRESSION),
		GRAMMAR_PRECEDENCE(TYPE_SCOPE_TYPE_CONSTRAINT, TYPE_CONSTRAINT),
		GRAMMAR_PRECEDENCE(UNARY_LOGICAL_OP, BINARY_LOGICAL_OP),
		GRAMMAR_PRECEDENCE(PRE_INC, BINARY_OP),
		GRAMMAR_PRECEDENCE(PRE_INC, NEGATION),
		GRAMMAR_PRECEDENCE(RADICAL, ADDITION),
		GRAMMAR_PRECEDENCE(RADICAL, ADD_SUB),
		GRAMMAR_PRECEDENCE(RADICAL, DIVISION),
		GRAMMAR_PRECEDENCE(RADICAL, SUBTRACTION),
		GRAMMAR_PRECEDENCE(RADICAL, MULTIPLICATIVE_OP),
		GRAMMAR_PRECEDENCE(RADICAL, INTEGER_DIVISION),
		GRAMMAR_PRECEDENCE(RADICAL, MODULATION),
		GRAMMAR_PRECEDENCE(RELATIONAL_OP, BINARY_LOGICAL_OP),
		GRAMMAR_PRECEDENCE(PRE_DEC, BINARY_OP),
		GRAMMAR_PRECEDENCE(PRE_DEC, NEGATION),
		GRAMMAR_PRECEDENCE(SET, MAGNITUDE),
		GRAMMAR_PRECEDENCE(NEGATION, BINARY_OP),
		GRAMMAR_PRECEDENCE(NOR, OR),
		GRAMMAR_PRECEDENCE(NOR, IMPLICATION),
		GRAMMAR_PRECEDENCE(NOR, IFF),
		GRAMMAR_PRECEDENCE(NOR, XOR),
		GRAMMAR_PRECEDENCE(PARAMETER_NATURAL, PARAMETER_ANALYTIC),
		GRAMMAR_PRECEDENCE(POST_DEC, BINARY_OP),
		GRAMMAR_PRECEDENCE(POST_DEC, NEGATION),
		GRAMMAR_PRECEDENCE(POST_INC, BINARY_OP),
		GRAMMAR_PRECEDENCE(POST_INC, NEGATION),
		GRAMMAR_PRECEDENCE(NOT, BINARY_OP),
		GRAMMAR_PRECEDENCE(OR, IMPLICATION),
		GRAMMAR_PRECEDENCE(OR, IFF),
		GRAMMAR_PRECEDENCE(OR, XOR),
		GRAMMAR_PRECEDENCE(MULTIPLICATIVE_OP, ADDITION),
		GRAMMAR_PRECEDENCE(MULTIPLICATIVE_OP, ADD_SUB),
		GRAMMAR_PRECEDENCE(MULTIPLICATIVE_OP, SUBTRACTION),
		GRAMMAR_PRECEDENCE(MULTIPLICATIVE_OP, INTEGER_DIVISION),
		GRAMMAR_PRECEDENCE(MULTIPLICATIVE_OP, MODULATION),
		GRAMMAR_PRECEDENCE(NAND, OR),
		GRAMMAR_PRECEDENCE(NAND, IMPLICATION),
		GRAMMAR_PRECEDENCE(NAND, IFF),
		GRAMMAR_PRECEDENCE(NAND, XOR),
		GRAMMAR_PRECEDENCE(IMPLICATION, IFF),
		GRAMMAR_PRECEDENCE(IMPLICATION, XOR),
		GRAMMAR_PRECEDENCE(INTEGER_DIVISION, ADDITION),
		GRAMMAR_PRECEDENCE(INTEGER_DIVISION, ADD_SUB),
		GRAMMAR_PRECEDENCE(INTEGER_DIVISION, SUBTRACTION),
		GRAMMAR_PRECEDENCE(INVOCATION, BINARY_OP),
		GRAMMAR_PRECEDENCE(INVOCATION, RADICAL),
		GRAMMAR_PRECEDENCE(INVOCATION, NEGATION),
		GRAMMAR_PRECEDENCE(LESSER_CHAIN_LOOP, EXPRESSION),
		GRAMMAR_PRECEDENCE(MAP, FUNCTION),
		GRAMMAR_PRECEDENCE(MODULATION, ADDITION),
		GRAMMAR_PRECEDENCE(MODULATION, ADD_SUB),
		GRAMMAR_PRECEDENCE(MODULATION, SUBTRACTION),
		GRAMMAR_PRECEDENCE(MULTIPLICATION, MAPS_TO),
		GRAMMAR_PRECEDENCE(GREATER_CHAIN_LOOP, EXPRESSION),
		GRAMMAR_PRECEDENCE(FUNCTION, CAST),
		GRAMMAR_PRECEDENCE(UNIT_EXPONENTIATION, UNIT_DIVISION),
		GRAMMAR_PRECEDENCE(UNIT_EXPONENTIATION, UNIT_MULTIPLICATION),
	})
);

}
