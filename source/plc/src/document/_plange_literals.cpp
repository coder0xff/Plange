#include "_plange_literals.hpp"

namespace plc {
literal_0x0A_t literal_0x0A;

literal_0x20PTR_t literal_0x20PTR;

literal_0x21_t literal_0x21;

literal_0x22_t literal_0x22;

literal_0x220x220x22_t literal_0x220x220x22;

literal_0x23_t literal_0x23;

literal_0x25_t literal_0x25;

literal_0x26_t literal_0x26;

literal_0x260x26_t literal_0x260x26;

literal_0x270x7C_t literal_0x270x7C;

literal_0x28_t literal_0x28;

literal_0x280x7C_t literal_0x280x7C;

literal_0x29_t literal_0x29;

literal_0x2A_t literal_0x2A;

literal_0x2A0x2A0x2A0x2F_t literal_0x2A0x2A0x2A0x2F;

literal_0x2A0x2F_t literal_0x2A0x2F;

literal_0x2B_t literal_0x2B;

literal_0x2B0x2B_t literal_0x2B0x2B;

literal_0x2B0x2D_t literal_0x2B0x2D;

literal_0x2C_t literal_0x2C;

literal_0x2C0x20_t literal_0x2C0x20;

literal_0x2D_t literal_0x2D;

literal_0x2D0x2D_t literal_0x2D0x2D;

literal_0x2D0x3E_t literal_0x2D0x3E;

literal_0x2E_t literal_0x2E;

literal_0x2E0x2E0x2E_t literal_0x2E0x2E0x2E;

literal_0x2F_t literal_0x2F;

literal_0x2F0x2A_t literal_0x2F0x2A;

literal_0x2F0x2A0x2A0x2A_t literal_0x2F0x2A0x2A0x2A;

literal_0x2F0x2F_t literal_0x2F0x2F;

literal_0x2F0x3D_t literal_0x2F0x3D;

literal_0x2Fhas_t literal_0x2Fhas;

literal_0x2Fin_t literal_0x2Fin;

literal_0_t literal_0;

literal_0x_t literal_0x;

literal_1_t literal_1;

literal_2_t literal_2;

literal_3_t literal_3;

literal_4_t literal_4;

literal_5_t literal_5;

literal_6_t literal_6;

literal_7_t literal_7;

literal_8_t literal_8;

literal_9_t literal_9;

literal_0x3A_t literal_0x3A;

literal_0x3A0x3D_t literal_0x3A0x3D;

literal_0x3B_t literal_0x3B;

literal_0x3C_t literal_0x3C;

literal_0x3C0x2D_t literal_0x3C0x2D;

literal_0x3C0x2D0x3E_t literal_0x3C0x2D0x3E;

literal_0x3C0x3C_t literal_0x3C0x3C;

literal_0x3C0x3D0x3E_t literal_0x3C0x3D0x3E;

literal_0x3D_t literal_0x3D;

literal_0x3D0x3C_t literal_0x3D0x3C;

literal_0x3D0x3E_t literal_0x3D0x3E;

literal_0x3E_t literal_0x3E;

literal_0x3E0x3E_t literal_0x3E0x3E;

literal_0x3F_t literal_0x3F;

literal_0x3F0x3F_t literal_0x3F0x3F;

literal_0x40_t literal_0x40;

literal_BYTE_t literal_BYTE;

literal_DWORD_t literal_DWORD;

literal_QWORD_t literal_QWORD;

literal_R_t literal_R;

literal_T_t literal_T;

literal_WORD_t literal_WORD;

literal_X86_fast_call_t literal_X86_fast_call;

literal_Z_t literal_Z;

literal_0x5B_t literal_0x5B;

literal_0x5B0x7C_t literal_0x5B0x7C;

literal_0x5C_t literal_0x5C;

literal_0x5D_t literal_0x5D;

literal_0x5E_t literal_0x5E;

literal_0x5E0x5E_t literal_0x5E0x5E;

literal___t literal__;

literal__delta__t literal__delta_;

literal__dot__t literal__dot_;

literal__o__t literal__o_;

literal__swiz__t literal__swiz_;

literal__x__t literal__x_;

literal__0x7C_t literal__0x7C;

literal_0x60_t literal_0x60;

literal_0x600x600x60_t literal_0x600x600x60;

literal_all_t literal_all;

literal_alloc_t literal_alloc;

literal_and_t literal_and;

literal_any_reg_call_t literal_any_reg_call;

literal_arm_aapcs_call_t literal_arm_aapcs_call;

literal_arm_aapcs_vfp_call_t literal_arm_aapcs_vfp_call;

literal_arm_apcs_call_t literal_arm_apcs_call;

literal_asm_t literal_asm;

literal_atomic_t literal_atomic;

literal_avr_builtin_call_t literal_avr_builtin_call;

literal_avr_intr_call_t literal_avr_intr_call;

literal_avr_signal_call_t literal_avr_signal_call;

literal_break_t literal_break;

literal_c_call_t literal_c_call;

literal_casts_t literal_casts;

literal_catch_t literal_catch;

literal_cold_call_t literal_cold_call;

literal_context_t literal_context;

literal_continue_t literal_continue;

literal_cxx_fast_tls_call_t literal_cxx_fast_tls_call;

literal_diamond_t literal_diamond;

literal_do_t literal_do;

literal_downcasts_t literal_downcasts;

literal_elif_t literal_elif;

literal_else_t literal_else;

literal_enum_t literal_enum;

literal_exactly_t literal_exactly;

literal_exists_t literal_exists;

literal_exists0x21_t literal_exists0x21;

literal_extern_t literal_extern;

literal_false_t literal_false;

literal_fast_call_t literal_fast_call;

literal_finally_t literal_finally;

literal_first_target_call_t literal_first_target_call;

literal_for_t literal_for;

literal_free_t literal_free;

literal_ghc_call_t literal_ghc_call;

literal_has_t literal_has;

literal_hhvm_call_t literal_hhvm_call;

literal_hipe_call_t literal_hipe_call;

literal_if_t literal_if;

literal_imperative_t literal_imperative;

literal_implementing_t literal_implementing;

literal_implements_t literal_implements;

literal_import_t literal_import;

literal_in_t literal_in;

literal_inheriting_t literal_inheriting;

literal_inherits_t literal_inherits;

literal_intel_ocl_bi_call_t literal_intel_ocl_bi_call;

literal_internal_t literal_internal;

literal_is_t literal_is;

literal_lock_t literal_lock;

literal_msp430_intr_call_t literal_msp430_intr_call;

literal_null_t literal_null;

literal_object_t literal_object;

literal_opaque_t literal_opaque;

literal_or_t literal_or;

literal_preserve_all_call_t literal_preserve_all_call;

literal_preserve_most_call_t literal_preserve_most_call;

literal_private_t literal_private;

literal_protected_t literal_protected;

literal_protected0x20internal_t literal_protected0x20internal;

literal_psubs_t literal_psubs;

literal_psups_t literal_psups;

literal_ptx_device_call_t literal_ptx_device_call;

literal_ptx_kernel_call_t literal_ptx_kernel_call;

literal_public_t literal_public;

literal_pure_t literal_pure;

literal_read_lock_t literal_read_lock;

literal_record_t literal_record;

literal_return_t literal_return;

literal_spir_func_call_t literal_spir_func_call;

literal_spir_kernel_call_t literal_spir_kernel_call;

literal_stable_t literal_stable;

literal_static_t literal_static;

literal_subs_t literal_subs;

literal_sups_t literal_sups;

literal_swift_call_t literal_swift_call;

literal_this_t literal_this;

literal_this_func_t literal_this_func;

literal_this_type_t literal_this_type;

literal_throw_t literal_throw;

literal_throwing_t literal_throwing;

literal_true_t literal_true;

literal_try_t literal_try;

literal_type_t literal_type;

literal_unstable_t literal_unstable;

literal_until_t literal_until;

literal_upcasts_t literal_upcasts;

literal_using_t literal_using;

literal_volatile_t literal_volatile;

literal_webkit_js_call_t literal_webkit_js_call;

literal_while_t literal_while;

literal_write_lock_t literal_write_lock;

literal_x86_64_sysv_call_t literal_x86_64_sysv_call;

literal_x86_64_win64_call_t literal_x86_64_win64_call;

literal_x86_intr_call_t literal_x86_intr_call;

literal_x86_std_call_t literal_x86_std_call;

literal_x86_this_call_t literal_x86_this_call;

literal_x86_vector_call_t literal_x86_vector_call;

literal_xor_t literal_xor;

literal_0x7B_t literal_0x7B;

literal_0x7B0x7C_t literal_0x7B0x7C;

literal_0x7C_t literal_0x7C;

literal_0x7C0x27_t literal_0x7C0x27;

literal_0x7C0x29_t literal_0x7C0x29;

literal_0x7C0x5D_t literal_0x7C0x5D;

literal_0x7C__t literal_0x7C_;

literal_0x7C0x7C_t literal_0x7C0x7C;

literal_0x7C0x7D_t literal_0x7C0x7D;

literal_0x7D_t literal_0x7D;

literal_0x7E_t literal_0x7E;

literal_0x7E0x7E_t literal_0x7E0x7E;

literal_0xC20xAC_t literal_0xC20xAC;

literal_0xC20xB1_t literal_0xC20xB1;

literal_0xC30x97_t literal_0xC30x97;

literal_0xC30xB7_t literal_0xC30xB7;

literal_0xCE0x94_t literal_0xCE0x94;

literal_0xE10xB60x9C_t literal_0xE10xB60x9C;

literal_0xE20x860x90_t literal_0xE20x860x90;

literal_0xE20x860x91_t literal_0xE20x860x91;

literal_0xE20x860x92_t literal_0xE20x860x92;

literal_0xE20x860x93_t literal_0xE20x860x93;

literal_0xE20x860x94_t literal_0xE20x860x94;

literal_0xE20x870x92_t literal_0xE20x870x92;

literal_0xE20x870x94_t literal_0xE20x870x94;

literal_0xE20x880x80_t literal_0xE20x880x80;

literal_0xE20x880x83_t literal_0xE20x880x83;

literal_0xE20x880x830x21_t literal_0xE20x880x830x21;

literal_0xE20x880x88_t literal_0xE20x880x88;

literal_0xE20x880x89_t literal_0xE20x880x89;

literal_0xE20x880x8B_t literal_0xE20x880x8B;

literal_0xE20x880x8C_t literal_0xE20x880x8C;

literal_0xE20x880x98_t literal_0xE20x880x98;

literal_0xE20x880x9A_t literal_0xE20x880x9A;

literal_0xE20x880xA7_t literal_0xE20x880xA7;

literal_0xE20x880xA8_t literal_0xE20x880xA8;

literal_0xE20x880xA9_t literal_0xE20x880xA9;

literal_0xE20x880xAA_t literal_0xE20x880xAA;

literal_0xE20x890xA0_t literal_0xE20x890xA0;

literal_0xE20x890xA4_t literal_0xE20x890xA4;

literal_0xE20x890xA5_t literal_0xE20x890xA5;

literal_0xE20x8A0x82_t literal_0xE20x8A0x82;

literal_0xE20x8A0x83_t literal_0xE20x8A0x83;

literal_0xE20x8A0x86_t literal_0xE20x8A0x86;

literal_0xE20x8A0x87_t literal_0xE20x8A0x87;

literal_0xE20x8A0x95_t literal_0xE20x8A0x95;

literal_0xE20x8A0x96_t literal_0xE20x8A0x96;

literal_0xE20x8B0x85_t literal_0xE20x8B0x85;

literal_0xE20x8B0xAE_t literal_0xE20x8B0xAE;

literal_0xE20x8C0x88_t literal_0xE20x8C0x88;

literal_0xE20x8C0x89_t literal_0xE20x8C0x89;

literal_0xE20x8C0x8A_t literal_0xE20x8C0x8A;

literal_0xE20x8C0x8B_t literal_0xE20x8C0x8B;

} // namespace plc
