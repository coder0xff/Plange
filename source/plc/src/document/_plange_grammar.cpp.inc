#include "_plange_grammar.hpp.inc"
#include "_plange_grammar_builder.cpp.inc"

plange_grammar::plange_grammar() : grammar(builder()),
			ADDITION(this->get_production("ADDITION")),
			ADD_SUB(this->get_production("ADD_SUB")),
			ALL(this->get_production("ALL")),
			ALLOCATION(this->get_production("ALLOCATION")),
			AND(this->get_production("AND")),
			ARGUMENT(this->get_production("ARGUMENT")),
			ARGUMENT_PACK(this->get_production("ARGUMENT_PACK")),
			ARRAY(this->get_production("ARRAY")),
			ARRAY_INDEXER(this->get_production("ARRAY_INDEXER")),
			ARRAY_INVOCATION(this->get_production("ARRAY_INVOCATION")),
			ASM_EXPRESSION(this->get_production("ASM_EXPRESSION")),
			ASM_FUNCTION(this->get_production("ASM_FUNCTION")),
			ASM_IDENTIFIER(this->get_production("ASM_IDENTIFIER")),
			ASM_OP(this->get_production("ASM_OP")),
			ASM_PTR_ARITHMETIC_ATT(this->get_production("ASM_PTR_ARITHMETIC_ATT")),
			ASM_PTR_ARITHMETIC_ATT_REG(this->get_production("ASM_PTR_ARITHMETIC_ATT_REG")),
			ASM_PTR_ARITHMETIC_INTEL(this->get_production("ASM_PTR_ARITHMETIC_INTEL")),
			ASM_SCOPE(this->get_production("ASM_SCOPE")),
			ASM_STATEMENT(this->get_production("ASM_STATEMENT")),
			ASSIGNMENT_CHAIN(this->get_production("ASSIGNMENT_CHAIN")),
			ATTRIBUTE(this->get_production("ATTRIBUTE")),
			BIJECTION(this->get_production("BIJECTION")),
			BINARY_ARITHMETIC_OP(this->get_production("BINARY_ARITHMETIC_OP")),
			BINARY_COLLECTION_OP(this->get_production("BINARY_COLLECTION_OP")),
			BINARY_LOGICAL_OP(this->get_production("BINARY_LOGICAL_OP")),
			BINARY_OP(this->get_production("BINARY_OP")),
			BITWISE_OP(this->get_production("BITWISE_OP")),
			BIT_AND(this->get_production("BIT_AND")),
			BIT_NOT(this->get_production("BIT_NOT")),
			BIT_OR(this->get_production("BIT_OR")),
			BIT_XOR(this->get_production("BIT_XOR")),
			BLOCK(this->get_production("BLOCK")),
			BOOL(this->get_production("BOOL")),
			BREAK(this->get_production("BREAK")),
			CARDINALITY(this->get_production("CARDINALITY")),
			CAST(this->get_production("CAST")),
			CASTS(this->get_production("CASTS")),
			CEILING(this->get_production("CEILING")),
			COMMENT(this->get_production("COMMENT")),
			COMPLEMENT(this->get_production("COMPLEMENT")),
			COMPOSITION(this->get_production("COMPOSITION")),
			COMPOUND(this->get_production("COMPOUND")),
			CONDITIONAL(this->get_production("CONDITIONAL")),
			CONSTRUCTIVE_OP(this->get_production("CONSTRUCTIVE_OP")),
			CONTINUE(this->get_production("CONTINUE")),
			CROSS_PRODUCT(this->get_production("CROSS_PRODUCT")),
			DATE(this->get_production("DATE")),
			DATE_TIME(this->get_production("DATE_TIME")),
			DATE_YEAR_DAY(this->get_production("DATE_YEAR_DAY")),
			DATE_YEAR_MONTH_DAY(this->get_production("DATE_YEAR_MONTH_DAY")),
			DECLARATION(this->get_production("DECLARATION")),
			DEFINITION(this->get_production("DEFINITION")),
			DELTA(this->get_production("DELTA")),
			DIMENSION(this->get_production("DIMENSION")),
			DIMENSIONAL_ANALYSIS_OP(this->get_production("DIMENSIONAL_ANALYSIS_OP")),
			DIMENSIONAL_NUMBER(this->get_production("DIMENSIONAL_NUMBER")),
			DIVISION(this->get_production("DIVISION")),
			DO(this->get_production("DO")),
			DOT_PRODUCT(this->get_production("DOT_PRODUCT")),
			DOWNCASTS(this->get_production("DOWNCASTS")),
			EMBEDDED_COMMENT(this->get_production("EMBEDDED_COMMENT")),
			EMBEDDED_COMMENT_INTERIOR(this->get_production("EMBEDDED_COMMENT_INTERIOR")),
			EMBEDDED_NEWLINE_STRING(this->get_production("EMBEDDED_NEWLINE_STRING")),
			EMBEDDED_NEWLINE_STRING_INTERIOR(this->get_production("EMBEDDED_NEWLINE_STRING_INTERIOR")),
			EMBEDDED_STRING(this->get_production("EMBEDDED_STRING")),
			EMBEDDED_STRING_INTERIOR(this->get_production("EMBEDDED_STRING_INTERIOR")),
			END_OF_LINE_COMMENT(this->get_production("END_OF_LINE_COMMENT")),
			ENUM(this->get_production("ENUM")),
			ENUM_ELEMENT(this->get_production("ENUM_ELEMENT")),
			EQUALITY_CHAIN(this->get_production("EQUALITY_CHAIN")),
			EQUALITY_CHAIN_LOOP(this->get_production("EQUALITY_CHAIN_LOOP")),
			EXACTLY(this->get_production("EXACTLY")),
			EXISTS(this->get_production("EXISTS")),
			EXISTS_ONE(this->get_production("EXISTS_ONE")),
			EXPONENTIATION(this->get_production("EXPONENTIATION")),
			EXPRESSION(this->get_production("EXPRESSION")),
			EXTERN(this->get_production("EXTERN")),
			FACTORIAL(this->get_production("FACTORIAL")),
			FLOOR(this->get_production("FLOOR")),
			FOR(this->get_production("FOR")),
			FOR_COLLECTION(this->get_production("FOR_COLLECTION")),
			FREE(this->get_production("FREE")),
			FUNCTION(this->get_production("FUNCTION")),
			FUNCTION_MODIFIER_0(this->get_production("FUNCTION_MODIFIER_0")),
			FUNCTION_MODIFIER_1(this->get_production("FUNCTION_MODIFIER_1")),
			FUNCTION_MODIFIER_2(this->get_production("FUNCTION_MODIFIER_2")),
			FUNCTION_MODIFIER_3(this->get_production("FUNCTION_MODIFIER_3")),
			FUNCTION_MODIFIER_4(this->get_production("FUNCTION_MODIFIER_4")),
			FUNCTION_MODIFIER_ATOMIC(this->get_production("FUNCTION_MODIFIER_ATOMIC")),
			FUNCTION_MODIFIER_CALLING_CONVENTION(this->get_production("FUNCTION_MODIFIER_CALLING_CONVENTION")),
			FUNCTION_MODIFIER_MODEL(this->get_production("FUNCTION_MODIFIER_MODEL")),
			FUNCTION_MODIFIER_PLATFORM(this->get_production("FUNCTION_MODIFIER_PLATFORM")),
			FUNCTION_MODIFIER_STABILITY(this->get_production("FUNCTION_MODIFIER_STABILITY")),
			FUNCTION_MODIFIER_THROWING(this->get_production("FUNCTION_MODIFIER_THROWING")),
			GREATER_CHAIN(this->get_production("GREATER_CHAIN")),
			GREATER_CHAIN_LOOP(this->get_production("GREATER_CHAIN_LOOP")),
			HAS(this->get_production("HAS")),
			HEX(this->get_production("HEX")),
			IC(this->get_production("IC")),
			ICR(this->get_production("ICR")),
			IDENTIFIER(this->get_production("IDENTIFIER")),
			IF(this->get_production("IF")),
			IFF(this->get_production("IFF")),
			IMPLEMENTS(this->get_production("IMPLEMENTS")),
			IMPLICATION(this->get_production("IMPLICATION")),
			IMPLICIT_TYPE_DEREFERENCE(this->get_production("IMPLICIT_TYPE_DEREFERENCE")),
			IMPORT(this->get_production("IMPORT")),
			IN(this->get_production("IN")),
			INEQUALITY(this->get_production("INEQUALITY")),
			INHERITANCE_ITEM_PREFIX(this->get_production("INHERITANCE_ITEM_PREFIX")),
			INHERITANCE_LIST(this->get_production("INHERITANCE_LIST")),
			INHERITS(this->get_production("INHERITS")),
			INTEGER_DIVISION(this->get_production("INTEGER_DIVISION")),
			INTERSECTION(this->get_production("INTERSECTION")),
			INVOCATION(this->get_production("INVOCATION")),
			IS(this->get_production("IS")),
			KLEENE_STAR(this->get_production("KLEENE_STAR")),
			LESSER_CHAIN(this->get_production("LESSER_CHAIN")),
			LESSER_CHAIN_LOOP(this->get_production("LESSER_CHAIN_LOOP")),
			LIST(this->get_production("LIST")),
			LOCK(this->get_production("LOCK")),
			LOOP(this->get_production("LOOP")),
			MAGNITUDE(this->get_production("MAGNITUDE")),
			MAP(this->get_production("MAP")),
			MAPS_TO(this->get_production("MAPS_TO")),
			MEMBER_ACCESS(this->get_production("MEMBER_ACCESS")),
			MEMBER_OFFSET(this->get_production("MEMBER_OFFSET")),
			MODULATION(this->get_production("MODULATION")),
			MULTIPLICATION(this->get_production("MULTIPLICATION")),
			MULTIPLICATIVE_OP(this->get_production("MULTIPLICATIVE_OP")),
			NAND(this->get_production("NAND")),
			NEAREST_INTEGER(this->get_production("NEAREST_INTEGER")),
			NEGATION(this->get_production("NEGATION")),
			NON_FRACTIONAL(this->get_production("NON_FRACTIONAL")),
			NON_NEG_FRACTIONAL(this->get_production("NON_NEG_FRACTIONAL")),
			NON_NEG_INTEGER(this->get_production("NON_NEG_INTEGER")),
			NON_NEG_NON_FRACTIONAL(this->get_production("NON_NEG_NON_FRACTIONAL")),
			NON_NEG_NUMBER(this->get_production("NON_NEG_NUMBER")),
			NON_ZERO_DECIMAL_DIGIT(this->get_production("NON_ZERO_DECIMAL_DIGIT")),
			NOR(this->get_production("NOR")),
			NOT(this->get_production("NOT")),
			NOT_HAS(this->get_production("NOT_HAS")),
			NOT_IN(this->get_production("NOT_IN")),
			NULL_COALESCE(this->get_production("NULL_COALESCE")),
			OBJECT(this->get_production("OBJECT")),
			OCTAL(this->get_production("OCTAL")),
			OR(this->get_production("OR")),
			PARAMETER(this->get_production("PARAMETER")),
			PARAMETER_ANALYTIC(this->get_production("PARAMETER_ANALYTIC")),
			PARAMETER_NATURAL(this->get_production("PARAMETER_NATURAL")),
			PARENTHETICAL(this->get_production("PARENTHETICAL")),
			PARENTHETICAL_INVOCATION(this->get_production("PARENTHETICAL_INVOCATION")),
			PLATFORM(this->get_production("PLATFORM")),
			POST_DEC(this->get_production("POST_DEC")),
			POST_INC(this->get_production("POST_INC")),
			PREPEND(this->get_production("PREPEND")),
			PRE_DEC(this->get_production("PRE_DEC")),
			PRE_INC(this->get_production("PRE_INC")),
			RADICAL(this->get_production("RADICAL")),
			RANGE(this->get_production("RANGE")),
			READ_LOCK(this->get_production("READ_LOCK")),
			RECORD(this->get_production("RECORD")),
			REGEX(this->get_production("REGEX")),
			RELATIONAL_COLLECTION_OP(this->get_production("RELATIONAL_COLLECTION_OP")),
			RELATIONAL_OP(this->get_production("RELATIONAL_OP")),
			RETURN(this->get_production("RETURN")),
			SET(this->get_production("SET")),
			SET_COMPREHENSION(this->get_production("SET_COMPREHENSION")),
			SHIFTL(this->get_production("SHIFTL")),
			SHIFTR(this->get_production("SHIFTR")),
			SLICE(this->get_production("SLICE")),
			STATEMENT(this->get_production("STATEMENT")),
			STATEMENT_SCOPE(this->get_production("STATEMENT_SCOPE")),
			STATIC(this->get_production("STATIC")),
			SUBSET_CHAIN(this->get_production("SUBSET_CHAIN")),
			SUBSET_CHAIN_LOOP(this->get_production("SUBSET_CHAIN_LOOP")),
			SUBTRACTION(this->get_production("SUBTRACTION")),
			SUPERSET_CHAIN(this->get_production("SUPERSET_CHAIN")),
			SUPERSET_CHAIN_LOOP(this->get_production("SUPERSET_CHAIN_LOOP")),
			SWIZZLE(this->get_production("SWIZZLE")),
			SYMMETRIC_DIFFERENCE(this->get_production("SYMMETRIC_DIFFERENCE")),
			THIS(this->get_production("THIS")),
			THIS_FUNC(this->get_production("THIS_FUNC")),
			THIS_TYPE(this->get_production("THIS_TYPE")),
			THROW(this->get_production("THROW")),
			TIME(this->get_production("TIME")),
			TRY(this->get_production("TRY")),
			TUPLE(this->get_production("TUPLE")),
			TYPE(this->get_production("TYPE")),
			TYPE_CONSTRAINT(this->get_production("TYPE_CONSTRAINT")),
			TYPE_CONSTRAINT_CHAIN(this->get_production("TYPE_CONSTRAINT_CHAIN")),
			TYPE_CONSTRAINT_HEAD(this->get_production("TYPE_CONSTRAINT_HEAD")),
			TYPE_DEREFERENCE(this->get_production("TYPE_DEREFERENCE")),
			TYPE_INVOCATION(this->get_production("TYPE_INVOCATION")),
			TYPE_SCOPE(this->get_production("TYPE_SCOPE")),
			TYPE_SCOPE_ASSIGNMENT_CHAIN(this->get_production("TYPE_SCOPE_ASSIGNMENT_CHAIN")),
			TYPE_SCOPE_DECLARATION(this->get_production("TYPE_SCOPE_DECLARATION")),
			TYPE_SCOPE_TYPE_CONSTRAINT(this->get_production("TYPE_SCOPE_TYPE_CONSTRAINT")),
			TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN(this->get_production("TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN")),
			TYPE_STATEMENT(this->get_production("TYPE_STATEMENT")),
			UNARY_ARITHMETIC_OP(this->get_production("UNARY_ARITHMETIC_OP")),
			UNARY_LOGICAL_OP(this->get_production("UNARY_LOGICAL_OP")),
			UNARY_OP(this->get_production("UNARY_OP")),
			UNION(this->get_production("UNION")),
			UNIT_DIVISION(this->get_production("UNIT_DIVISION")),
			UNIT_EXPONENTIATION(this->get_production("UNIT_EXPONENTIATION")),
			UNIT_MULTIPLICATION(this->get_production("UNIT_MULTIPLICATION")),
			UPCASTS(this->get_production("UPCASTS")),
			USING(this->get_production("USING")),
			VECTOR_NORM(this->get_production("VECTOR_NORM")),
			VISIBILITY_MODIFIER(this->get_production("VISIBILITY_MODIFIER")),
			VOLATILE_IMPLICIT_TYPE_DEREFERENCE(this->get_production("VOLATILE_IMPLICIT_TYPE_DEREFERENCE")),
			VOLATILE_TYPE_DEREFERENCE(this->get_production("VOLATILE_TYPE_DEREFERENCE")),
			WHOLE_NUMBER(this->get_production("WHOLE_NUMBER")),
			WRITE_LOCK(this->get_production("WRITE_LOCK")),
			WS(this->get_production("WS")),
			XML_DOC_STRING(this->get_production("XML_DOC_STRING")),
			XML_DOC_STRING_INTERIOR(this->get_production("XML_DOC_STRING_INTERIOR")),
			XOR(this->get_production("XOR"))
{}