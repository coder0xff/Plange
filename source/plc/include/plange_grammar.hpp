/************ This file was generated by parlex ************/

#ifndef PLANGE_GRAMMAR_HPP
#define PLANGE_GRAMMAR_HPP

#include "parlex/builder.hpp"

namespace plc {

DECLARE_DFA(ADDITION);
DECLARE_DFA(ADD_SUB);
DECLARE_DFA(ALL);
DECLARE_DFA(ALLOCATION);
DECLARE_DFA(AND);
DECLARE_DFA(ARGUMENT);
DECLARE_DFA(ARGUMENT_PACK);
DECLARE_DFA(ARRAY);
DECLARE_DFA(ARRAY_INVOCATION);
DECLARE_DFA(ASM_EXPRESSION);
DECLARE_DFA(ASM_FUNCTION);
DECLARE_DFA(ASM_IDENTIFIER);
DECLARE_DFA(ASM_OP);
DECLARE_DFA(ASM_PTR_ARITHMETIC_ATT);
DECLARE_DFA(ASM_PTR_ARITHMETIC_ATT_REG);
DECLARE_DFA(ASM_PTR_ARITHMETIC_INTEL);
DECLARE_DFA(ASM_SCOPE);
DECLARE_DFA(ASM_STATEMENT);
DECLARE_DFA(ASSIGNMENT_CHAIN);
DECLARE_DFA(ATTRIBUTE);
DECLARE_DFA(BIJECTION);
DECLARE_DFA(BINARY_ARITHMETIC_OP);
DECLARE_DFA(BINARY_COLLECTION_OP);
DECLARE_DFA(BINARY_LOGICAL_OP);
DECLARE_DFA(BINARY_OP);
DECLARE_DFA(BITWISE_OP);
DECLARE_DFA(BIT_AND);
DECLARE_DFA(BIT_NOT);
DECLARE_DFA(BIT_OR);
DECLARE_DFA(BIT_XOR);
DECLARE_DFA(BLOCK);
DECLARE_DFA(BOOL);
DECLARE_DFA(BREAK);
DECLARE_DFA(CARDINALITY);
DECLARE_DFA(CAST);
DECLARE_DFA(CASTS);
DECLARE_DFA(CEILING);
DECLARE_DFA(COMMENT);
DECLARE_DFA(COMPLEMENT);
DECLARE_DFA(COMPOSITION);
DECLARE_DFA(COMPOUND);
DECLARE_DFA(CONDITIONAL);
DECLARE_DFA(CONSTRUCTIVE_OP);
DECLARE_DFA(CONTINUE);
DECLARE_DFA(CROSS_PRODUCT);
DECLARE_DFA(DATE);
DECLARE_DFA(DATE_TIME);
DECLARE_DFA(DATE_YEAR_DAY);
DECLARE_DFA(DATE_YEAR_MONTH_DAY);
DECLARE_DFA(DECLARATION);
DECLARE_DFA(DEFINITION);
DECLARE_DFA(DELTA);
DECLARE_DFA(DIMENSION);
DECLARE_DFA(DIMENSIONAL_ANALYSIS_OP);
DECLARE_DFA(DIMENSIONAL_NUMBER);
DECLARE_DFA(DIVISION);
DECLARE_DFA(DO);
DECLARE_DFA(DOT_PRODUCT);
DECLARE_DFA(DOWNCASTS);
DECLARE_DFA(EMBEDDED_COMMENT);
DECLARE_DFA(EMBEDDED_COMMENT_INTERIOR);
DECLARE_DFA(EMBEDDED_NEWLINE_STRING);
DECLARE_DFA(EMBEDDED_NEWLINE_STRING_INTERIOR);
DECLARE_DFA(EMBEDDED_STRING);
DECLARE_DFA(EMBEDDED_STRING_INTERIOR);
DECLARE_DFA(END_OF_LINE_COMMENT);
DECLARE_DFA(ENUM);
DECLARE_DFA(ENUM_ELEMENT);
DECLARE_DFA(EQUALITY_CHAIN);
DECLARE_DFA(EQUALITY_CHAIN_LOOP);
DECLARE_DFA(EXACTLY);
DECLARE_DFA(EXISTS);
DECLARE_DFA(EXISTS_ONE);
DECLARE_DFA(EXPONENTIATION);
DECLARE_DFA(EXPRESSION);
DECLARE_DFA(FACTORIAL);
DECLARE_DFA(FLOOR);
DECLARE_DFA(FOR);
DECLARE_DFA(FOR_COLLECTION);
DECLARE_DFA(FREE);
DECLARE_DFA(FUNCTION);
DECLARE_DFA(FUNCTION_MODIFIER_0);
DECLARE_DFA(FUNCTION_MODIFIER_1);
DECLARE_DFA(FUNCTION_MODIFIER_2);
DECLARE_DFA(FUNCTION_MODIFIER_3);
DECLARE_DFA(FUNCTION_MODIFIER_4);
DECLARE_DFA(FUNCTION_MODIFIER_ATOMIC);
DECLARE_DFA(FUNCTION_MODIFIER_CALLING_CONVENTION);
DECLARE_DFA(FUNCTION_MODIFIER_MODEL);
DECLARE_DFA(FUNCTION_MODIFIER_PLATFORM);
DECLARE_DFA(FUNCTION_MODIFIER_STABILITY);
DECLARE_DFA(FUNCTION_MODIFIER_THROWING);
DECLARE_DFA(GREATER_CHAIN);
DECLARE_DFA(GREATER_CHAIN_LOOP);
DECLARE_DFA(HAS);
DECLARE_DFA(HEX);
DECLARE_DFA(IC);
DECLARE_DFA(ICR);
DECLARE_DFA(IDENTIFIER);
DECLARE_DFA(IF);
DECLARE_DFA(IFF);
DECLARE_DFA(IMPLEMENTS);
DECLARE_DFA(IMPLICATION);
DECLARE_DFA(IMPLICIT_TYPE_DEREFERENCE);
DECLARE_DFA(IMPORT);
DECLARE_DFA(IN);
DECLARE_DFA(INEQUALITY);
DECLARE_DFA(INHERITANCE_ITEM_PREFIX);
DECLARE_DFA(INHERITANCE_LIST);
DECLARE_DFA(INHERITS);
DECLARE_DFA(INTEGER_DIVISION);
DECLARE_DFA(INTERSECTION);
DECLARE_DFA(INVOCATION);
DECLARE_DFA(IS);
DECLARE_DFA(KLEENE_STAR);
DECLARE_DFA(LESSER_CHAIN);
DECLARE_DFA(LESSER_CHAIN_LOOP);
DECLARE_DFA(LIST);
DECLARE_DFA(LOCK);
DECLARE_DFA(LOOP);
DECLARE_DFA(MAGNITUDE);
DECLARE_DFA(MAP);
DECLARE_DFA(MAPS_TO);
DECLARE_DFA(MEMBER_ACCESS);
DECLARE_DFA(MEMBER_OFFSET);
DECLARE_DFA(MODULATION);
DECLARE_DFA(MULTIPLICATION);
DECLARE_DFA(MULTIPLICATIVE_OP);
DECLARE_DFA(NAND);
DECLARE_DFA(NEAREST_INTEGER);
DECLARE_DFA(NEGATION);
DECLARE_DFA(NON_FRACTIONAL);
DECLARE_DFA(NON_NEG_FRACTIONAL);
DECLARE_DFA(NON_NEG_INTEGER);
DECLARE_DFA(NON_NEG_NON_FRACTIONAL);
DECLARE_DFA(NON_NEG_NUMBER);
DECLARE_DFA(NON_ZERO_DECIMAL_DIGIT);
DECLARE_DFA(NOR);
DECLARE_DFA(NOT);
DECLARE_DFA(NOT_HAS);
DECLARE_DFA(NOT_IN);
DECLARE_DFA(NULL_COALESCE);
DECLARE_DFA(OBJECT);
DECLARE_DFA(OCTAL);
DECLARE_DFA(OR);
DECLARE_DFA(PARAMETER);
DECLARE_DFA(PARAMETER_ANALYTIC);
DECLARE_DFA(PARAMETER_NATURAL);
DECLARE_DFA(PARENTHETICAL);
DECLARE_DFA(PARENTHETICAL_INVOCATION);
DECLARE_DFA(PAYLOAD);
DECLARE_DFA(PLATFORM);
DECLARE_DFA(POST_DEC);
DECLARE_DFA(POST_INC);
DECLARE_DFA(PREPEND);
DECLARE_DFA(PRE_DEC);
DECLARE_DFA(PRE_INC);
DECLARE_DFA(RADICAL);
DECLARE_DFA(RANGE);
DECLARE_DFA(READ_LOCK);
DECLARE_DFA(RECORD);
DECLARE_DFA(REGEX);
DECLARE_DFA(RELATIONAL_COLLECTION_OP);
DECLARE_DFA(RELATIONAL_OP);
DECLARE_DFA(RETURN);
DECLARE_DFA(SET);
DECLARE_DFA(SET_COMPREHENSION);
DECLARE_DFA(SHIFTL);
DECLARE_DFA(SHIFTR);
DECLARE_DFA(SLICE);
DECLARE_DFA(STATEMENT);
DECLARE_DFA(STATEMENT_SCOPE);
DECLARE_DFA(STRING);
DECLARE_DFA(SUBSET_CHAIN);
DECLARE_DFA(SUBSET_CHAIN_LOOP);
DECLARE_DFA(SUBTRACTION);
DECLARE_DFA(SUPERSET_CHAIN);
DECLARE_DFA(SUPERSET_CHAIN_LOOP);
DECLARE_DFA(SWIZZLE);
DECLARE_DFA(SYMMETRIC_DIFFERENCE);
DECLARE_DFA(THIS);
DECLARE_DFA(THIS_FUNC);
DECLARE_DFA(THIS_TYPE);
DECLARE_DFA(THROW);
DECLARE_DFA(TIME);
DECLARE_DFA(TRY);
DECLARE_DFA(TUPLE);
DECLARE_DFA(TYPE);
DECLARE_DFA(TYPE_CONSTRAINT);
DECLARE_DFA(TYPE_CONSTRAINT_CHAIN);
DECLARE_DFA(TYPE_CONSTRAINT_HEAD);
DECLARE_DFA(TYPE_DEREFERENCE);
DECLARE_DFA(TYPE_INVOCATION);
DECLARE_DFA(TYPE_SCOPE);
DECLARE_DFA(TYPE_SCOPE_ASSIGNMENT_CHAIN);
DECLARE_DFA(TYPE_SCOPE_DECLARATION);
DECLARE_DFA(TYPE_SCOPE_TYPE_CONSTRAINT);
DECLARE_DFA(TYPE_SCOPE_TYPE_CONSTRAINT_CHAIN);
DECLARE_DFA(TYPE_STATEMENT);
DECLARE_DFA(UNARY_ARITHMETIC_OP);
DECLARE_DFA(UNARY_LOGICAL_OP);
DECLARE_DFA(UNARY_OP);
DECLARE_DFA(UNION);
DECLARE_DFA(UNIT_DIVISION);
DECLARE_DFA(UNIT_EXPONENTIATION);
DECLARE_DFA(UNIT_MULTIPLICATION);
DECLARE_DFA(UPCASTS);
DECLARE_DFA(USING);
DECLARE_DFA(VECTOR_NORM);
DECLARE_DFA(VISIBILITY_MODIFIER);
DECLARE_DFA(VOLATILE_IMPLICIT_TYPE_DEREFERENCE);
DECLARE_DFA(VOLATILE_TYPE_DEREFERENCE);
DECLARE_DFA(WHOLE_NUMBER);
DECLARE_DFA(WRITE_LOCK);
DECLARE_DFA(WS);
DECLARE_DFA(XML_DOC_STRING);
DECLARE_DFA(XML_DOC_STRING_INTERIOR);
DECLARE_DFA(XOR);

DECLARE_GRAMMAR(plange);

}

#endif
